// Code generated by go-bindata.
// sources:
// res/messages_en.json
// res/messages_zh.json
// res/res.go
// res/json/case-from-prodoct.json
// res/json/success.json
// res/json/zentaoService-settings.json
// res/template/go.tpl
// res/template/lua.tpl
// res/template/perl.tpl
// res/template/php.tpl
// res/template/php.yaml
// res/template/python.tpl
// res/template/readme.tpl
// res/template/ruby.tpl
// res/template/shell.tpl
// res/template/tcl.tpl
// DO NOT EDIT!

package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resMessages_enJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xcf\x6e\xdb\x30\x0c\x87\xef\x7d\x0a\xc2\x40\xd0\x4b\xf6\x02\xbd\x6d\x59\x7a\xdc\x8a\xa6\xc5\x0e\xc3\x60\x68\x36\xe3\x08\x71\x28\x43\xa4\xb1\x6e\x45\xdf\x7d\x90\xf3\xa7\x91\x4c\xcb\xdb\x25\x87\xfc\x3e\xf3\xa3\x08\x4a\xaf\x37\x00\x45\x6b\xa8\xe9\x4d\x83\xc5\x1d\x14\x48\x1f\x9e\x37\xc5\x32\xfc\x7d\x40\x66\xd3\x20\x17\x77\xf0\xfd\x06\x00\xe0\x75\xf8\x05\x28\x6c\x1d\xd0\xaa\xf7\x1e\x49\xca\xce\xe3\x16\x3d\x52\x85\xc3\x77\x03\x71\xfa\xf6\x0a\x03\x0d\x13\x6f\x88\x5b\x23\xd6\xd1\x04\x3a\x90\x6f\x4b\xcd\xcf\x38\xeb\x66\x14\x78\x98\xf7\x06\x6c\xc1\x20\x0e\x16\x9c\x33\xf6\x8c\xe5\x65\x58\x9a\xef\x99\x11\xd6\xd4\xb4\x96\x77\x30\x06\x13\xab\x0a\x9f\xed\x9a\x3e\x40\xaa\x36\x0e\x12\xcd\xa8\xb4\x52\xf9\x97\xf3\xfb\xcf\xd6\xab\xc5\xbf\x39\xbf\x87\x28\x4c\x04\x17\x20\x23\xf8\xb3\x53\x6b\x5f\xff\x9d\x54\x5d\xed\x2c\x21\xe7\x17\x40\x8c\x97\x12\x5f\xb0\xea\x87\xaf\x34\xc3\x26\x30\xb0\x1e\x33\x89\x2e\xe5\x32\x5a\xa4\x7a\x46\xba\xa6\xfa\x1f\x94\x31\x35\x7b\xce\xca\xb0\xbe\x74\xc7\xd6\x57\x51\xac\x9e\x2e\x20\x61\xcf\x8d\xcc\xec\x79\x38\xe1\xa4\x2e\xb4\x9d\x95\x9d\x81\x8b\x6a\x09\xdc\x21\xd5\xb0\xa8\x19\x2b\xce\xae\xf8\x4f\x6c\x2c\x95\x86\x4c\xfb\x7b\x42\xff\xd8\x13\x70\xe5\x6d\x27\x3c\xd9\xc1\xa7\x50\x25\x5c\xe7\x53\x21\x10\x64\x01\x8f\xdc\xb7\x92\x3b\xb7\xef\xa9\x1c\xd5\xfe\x4f\xf7\x15\x03\x96\x60\xeb\xda\x1a\x3d\xdc\x2e\xf8\x16\x1c\x85\x91\x7c\xdd\xe4\x5a\x10\x7b\xc0\x72\xeb\xdd\xa1\x14\xa7\xf6\x70\xef\xdd\x01\x9e\xdc\xa4\x7f\xc8\xcf\x8f\xd9\xfb\xe4\x21\x1a\xbd\x26\x76\x62\x5a\xd5\xf8\x14\x27\x89\xef\x98\x66\x0a\x77\x86\xf5\x69\x3e\x44\x41\x52\x76\x08\x33\x55\xb7\xc6\xea\xdd\xde\x47\x41\x3a\x9c\x10\xe6\x6e\xda\xde\x76\xfa\x1d\x8b\x82\xf4\x76\x85\x30\xb7\xd5\x2c\x38\x51\x36\x0a\x46\x97\x16\xbb\x5c\xb3\xd5\x0e\xab\x7d\xe7\x2c\x89\x5a\x7b\xa5\xc4\xa3\x37\xf6\x82\xe4\x5e\x83\x97\x0e\x2b\x29\x4f\xd7\x47\x7d\x12\x06\x02\x1e\x13\x22\x7d\x17\x22\x2a\x23\x34\x95\xf4\xa6\xcd\x09\x3f\x0e\xc4\x9c\x30\xa6\x32\x42\x72\xe5\xfb\x30\xf5\x65\xfd\xe2\x40\x45\x12\x65\x82\x1d\x9d\x61\x27\x7e\xdc\xbc\xfd\x0d\x00\x00\xff\xff\x22\x2c\xb1\x6f\x6c\x09\x00\x00")

func resMessages_enJsonBytes() ([]byte, error) {
	return bindataRead(
		_resMessages_enJson,
		"res/messages_en.json",
	)
}

func resMessages_enJson() (*asset, error) {
	bytes, err := resMessages_enJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/messages_en.json", size: 2412, mode: os.FileMode(420), modTime: time.Unix(1564213643, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resMessages_zhJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\xd1\x4e\x13\x4f\x14\xc6\xef\xfb\x14\x27\x9b\x6c\xb8\xe1\x09\xb8\xfb\x87\x3f\x5c\x1a\x82\x18\x2f\x8c\xd9\x8c\xdb\xa1\x6c\xda\xce\x36\x33\xb3\x11\x25\x24\xd5\x88\x42\x28\x84\x88\x48\xc4\x0a\x69\x02\x81\x10\x59\x54\x54\x90\xb2\xf0\x32\xdd\xdd\xe9\x95\xaf\x60\x76\x4b\x90\x9d\x4e\x67\xf1\xa6\x17\x7b\xbe\xfd\x7e\xe7\x7c\x3b\x67\x3a\x57\x00\x30\x2a\x88\x94\x3c\x54\xc2\xc6\x08\x18\xcf\x67\x8c\xe1\xe4\x59\x15\x33\x86\x4a\x98\x19\x23\xf0\xa8\x00\x00\x30\x97\xfe\x02\x18\x4e\x31\xd1\xd9\x1e\xa5\x98\x70\xab\x46\xf1\x34\xa6\x98\xd8\x38\x7d\x2f\x55\x5c\xbf\x9b\xc8\x46\x7b\x32\x50\xc9\x38\x45\x84\x55\x10\x77\x5c\x92\x48\xc3\x60\x3d\x5c\x5a\xe9\x2e\xac\xc4\x81\x6f\xa4\x9a\xf9\x61\x15\x99\xe1\x5c\x2a\xc3\x1c\x26\xf2\x89\xc2\xbf\x8c\x03\xdf\x64\x9d\xb3\x73\x93\xe9\x90\x49\x40\x4a\x50\xb6\x20\xdb\x1f\x1f\x89\x83\xba\xce\xf7\xa9\x4b\xcb\xff\x3b\x54\x69\xfd\xd0\xa5\x65\xc8\x14\xe5\xbc\x4e\xf7\x3a\x41\x33\xfe\xe8\x87\xc1\x86\x0e\x72\xfd\x45\x65\xff\xdb\x8f\x25\xe7\xce\xd9\x51\xf4\xfe\x8d\xce\xd3\x63\xd8\xba\x39\x35\x2a\xf7\x07\x0c\xc3\xe8\x8c\x43\x30\xc3\xd0\x2f\x94\x79\xc1\x55\xfc\xee\xa0\x47\xcd\x0f\x8d\x71\x44\xb9\x85\x67\xb1\xed\xa5\x06\x2a\xfc\xfd\x44\x03\x63\xfd\x1a\x39\xc3\x8b\x7a\xb8\xbf\x1c\x2d\xed\x8b\x56\x43\xc7\xc4\xa4\x98\x43\x1c\x23\xc5\x3b\xf0\xe2\xf6\x7a\xf4\x69\x27\x9f\xd7\x9b\xd1\x46\x4c\x9d\x6e\x6f\xbc\xd1\x4c\x59\x39\x59\x12\xeb\xe5\x32\x98\x0c\xf4\x07\x3c\x99\x6f\x20\x2d\x19\x4d\xcb\xea\x4d\x75\x9b\xf5\xfb\xa2\x21\xea\x9b\xd1\xe6\x4f\xb3\x18\xef\xbf\xbd\x21\xab\xd0\x4f\x70\xc9\x21\x16\x22\xa8\xf2\x6c\x00\x7f\xd2\x23\xc0\x6c\xea\xd4\x38\xcb\x19\x37\x5c\x7c\x1d\x6d\xaf\x45\x3f\x96\xc5\xf1\x46\xd2\xd4\x76\x53\x37\x34\xf5\x88\xd5\xe7\xfb\x8f\x5c\x71\xb5\x26\x5a\x0d\xf1\x6a\x2b\x6a\x7e\x1e\x32\xd9\x50\xe7\x7c\xd5\x64\xd1\xfa\x4a\xb2\x99\x27\xed\xb8\xbd\xa3\x6b\x80\x3b\x55\x6c\x4d\x53\xb7\x6a\x71\x57\xd9\xc1\x38\x75\xab\x30\xe5\x0e\x5e\x9c\xf6\xaa\xc9\xc2\xc5\x2f\x26\x1b\x06\x55\xde\x2a\xa6\xcb\x51\x45\x09\x9b\xca\x56\xe4\x80\xd7\x16\x85\xdf\xd2\x39\xd7\x10\x53\xe7\x38\x91\x29\x48\xbe\xdd\xfa\x96\xb8\xd2\xde\x35\xd3\xc8\x51\x37\x3c\x9e\x29\xc8\xfd\xee\x7e\x15\xdf\xf7\xb4\x3b\x56\x76\x6a\xea\xed\xca\x14\xe4\x0f\x7e\x7a\x72\xbb\x5f\xf5\xf2\xe2\x01\xc6\x99\x82\x64\x1c\x1d\xed\x75\x0f\x77\x75\x0d\xdb\x33\xd8\x2e\xd7\x5c\x87\x70\xf5\x5f\xad\xa2\x2c\x87\x7d\xd8\x10\xc7\x2f\xe2\x97\xbf\xb4\x77\xc1\x6c\x0d\xdb\xdc\xa2\x98\x79\x15\x35\x69\x2c\x55\xc0\xa4\xa4\x90\x07\x6a\xee\x84\x97\x0b\xf9\x6b\x88\x6c\xee\xa1\x8a\x8e\xf7\x5f\xaa\xc8\xe3\x85\xfe\x76\xf7\xc3\x1d\x78\xc4\xb5\xfe\x26\xa9\x3e\xb1\xf7\x5c\x50\x4a\xe4\x09\xbf\xb5\xa2\xe6\x92\x1c\x6a\x01\xe0\x71\x61\xfe\x4f\x00\x00\x00\xff\xff\xb6\x3b\x56\xc3\x59\x09\x00\x00")

func resMessages_zhJsonBytes() ([]byte, error) {
	return bindataRead(
		_resMessages_zhJson,
		"res/messages_zh.json",
	)
}

func resMessages_zhJson() (*asset, error) {
	bytes, err := resMessages_zhJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/messages_zh.json", size: 2393, mode: os.FileMode(420), modTime: time.Unix(1564213655, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resResGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x4d\x8f\xe3\xc6\x11\x3d\x93\xbf\xa2\x2d\xc0\x86\x14\x68\x25\x7e\x7f\x08\x98\x8b\xbd\x1b\x60\x03\x78\x0d\x24\x9b\x53\x2a\x58\x34\xc9\x6e\x0d\x13\x49\x54\x48\xca\xa9\x99\xc5\xfc\xf7\xe0\x75\xf5\x8c\x67\x3c\x1a\xef\x25\x07\x49\x64\x7f\x54\xbd\x7a\xf5\xaa\xbb\xb4\xdd\xaa\x9f\x86\xce\xa8\xbd\x39\x99\x51\xcf\xa6\x53\xcd\x9d\xda\x0f\xef\x9a\xfe\xd4\xe9\x59\x6f\xc2\xed\x56\x4d\xc3\x65\x6c\xcd\xb4\xc3\xf3\x68\xa6\xed\xd1\x4c\x93\xde\x9b\xe9\x8b\x39\x6d\xfe\x35\x0d\xa7\x57\xe3\xf7\xb7\x2f\xc6\x47\x33\x6d\xf6\xc3\xe3\x1b\x66\xb6\xad\x9e\xcc\x3b\x3b\x0e\xc7\x77\xe7\x71\xe8\x86\x76\x7e\xb1\xc1\x2d\x99\x2e\x6d\x6b\xa6\xe9\xf5\xc4\xbd\x39\xcd\x7a\x78\x37\x99\x79\xee\x4f\xfb\x97\x0b\x66\x73\x3c\x1f\xf4\x6c\xb6\xfb\x61\x33\x9f\x0f\xaf\x86\x0f\x17\x7d\x75\xfc\x6c\xc6\xc3\xf5\x89\xdb\xf3\x9b\xe3\x77\xfa\x78\x65\xe2\x6e\xbe\x1d\x4e\x57\xf7\x8c\x46\x77\x47\x73\x7d\xea\xd2\xdc\x5d\x9d\x98\x6e\xcd\xe1\x3a\xb2\xb9\x7d\x1a\x7f\xff\x8b\xfa\xf4\xcb\x67\xf5\xe1\xfd\xc7\xcf\xdf\x85\xe1\x59\xb7\xff\xd6\x7b\x83\xd5\x61\xd8\x1f\xcf\xc3\x38\xab\x65\x18\x2c\x9a\xbb\xd9\x4c\x8b\x30\x58\xb4\xc3\xf1\x3c\x9a\x69\xda\xee\xef\xfb\x33\x06\xec\x71\xc6\x4f\x3f\xc8\xf7\xb6\x1f\x2e\x73\x7f\xc0\xcb\xe0\x36\x9c\xf5\x7c\xbb\xb5\xfd\xc1\xe0\x01\x03\xd3\x3c\x82\x7a\x3c\xce\xfd\xd1\x2c\xc2\x55\x18\xda\xcb\xa9\x55\x5e\x36\x7f\x35\xba\x5b\xe2\x41\xfd\xe3\x9f\x70\xbb\x56\x27\x7d\x34\x4a\xb6\xad\xd4\xf2\x71\xd4\x8c\xe3\x30\xae\xd4\xd7\x30\xd8\xdf\xbb\x37\xb5\xbb\x51\x40\xb5\xf9\x64\xfe\x0b\x23\x66\x5c\x3a\xd8\x78\xff\xf1\x62\xad\x19\x9d\xd9\xd5\x2a\x0c\x7a\xeb\x36\x7c\x77\xa3\x4e\xfd\x01\x26\x82\xd1\xcc\x97\xf1\x84\xd7\xb5\xb2\xc7\x79\xf3\x01\xd6\xed\x72\x01\x43\xea\xfb\xff\xec\xd4\xf7\xbf\x2e\x04\x89\xf3\xb5\x0a\x83\x87\x30\x0c\x7e\xd5\xa3\x6a\x2e\x56\x89\x1f\x71\x12\x06\x5f\x04\xce\x8d\xea\x87\xcd\x4f\xc3\xf9\x6e\xf9\x43\x73\xb1\x6b\xb5\xbf\x5f\x85\x41\x7b\xf8\xf0\x88\x74\xf3\xd3\x61\x98\xcc\x72\x15\xfe\xbf\xf0\xc0\x8c\xd8\x7f\xc3\x90\x19\x47\xc1\xed\x07\x9b\x8b\xdd\xfc\x08\xe8\xcb\xd5\x1a\x2b\xc2\x87\x30\x9c\xef\xce\x46\xe9\x69\x32\x33\x28\xbf\xb4\x33\xac\xb8\xf8\x7c\x3e\xc2\xa0\x3f\xd9\x41\xa9\x61\xda\xfc\xb9\x3f\x98\x8f\x27\x3b\x3c\xed\xf3\x29\x7c\x1c\x7f\x66\xc1\xe5\x50\x29\x9f\xc6\x30\x98\xfa\x7b\xf7\xde\x9f\xe6\x22\x0b\x83\x23\xce\x11\xf5\x64\xf4\xe7\xa1\x33\x6e\xf0\x73\x7f\x34\x0a\x32\xd9\xe0\x09\x7e\x9c\x54\x96\xb6\xff\xbd\xaf\x95\xfa\xa4\x8f\x66\xb9\xf2\x1e\xe0\xd3\x47\x69\xfb\x0d\xbc\x87\x0f\x7f\xb0\xf7\x6f\xfd\x3d\xf6\x3a\x34\x2f\xb7\x02\xe8\x1f\x6e\x05\xd6\xe5\xea\x39\xf2\x97\x06\x10\xda\xb7\x0c\x20\xb8\xe5\xea\xb7\x40\x5f\x59\xf0\xd1\xbf\x6d\xe4\xe3\xf4\xbe\x1f\x97\x2b\xd5\x0c\xc3\xe1\xf9\x6e\x7d\x98\xbe\x11\xf9\xdd\x24\x81\x9b\xd1\xea\xd6\x7c\x7d\x78\xb6\xdb\x4b\x02\x2a\xff\x32\x9a\xe9\xe7\xdf\xce\xee\xbf\x4c\xc3\x49\xdd\x78\x45\x2c\x17\xc4\xb1\x25\xae\x1a\xe2\xa8\x22\x8e\xa2\xeb\x1f\x6b\x89\xeb\x4c\x3e\xad\x25\x2e\x0c\x71\xd7\x10\xa7\x98\x6f\x89\xab\x92\xd8\x58\xe2\xb2\x23\x8e\x34\x71\x9b\x10\x67\x11\x71\x17\x11\x67\x0d\xb1\x2d\x88\xa3\x84\xb8\xe9\x88\x8b\x8e\x38\xaf\x89\x4b\x4d\xdc\x61\xaf\x26\xd6\x05\x71\x9b\x13\x47\x86\xb8\x4d\x89\x8b\x88\xb8\xa8\x88\xd3\x82\xd8\xa4\x82\xad\x8c\x89\x93\x8a\x38\x4b\x89\x75\x46\xdc\xc4\x82\x23\xcb\x89\x3b\xef\xbb\x06\x56\xcc\x97\xc4\x75\x4c\x9c\xb5\xc4\x6d\x23\x58\x93\x5c\x70\xda\x96\x38\x35\x7e\x9d\xb7\x9d\x01\x83\x25\x4e\x4b\x89\x17\x36\x8b\x86\x58\x57\xc4\xa6\x26\xce\x3a\xe2\x2a\x15\x8c\x71\x47\x1c\x67\xc4\x59\x25\xdc\xd5\x46\xf6\x61\x2e\x4d\xc4\x3e\xb0\x20\xfe\xa2\x20\xee\x52\xe2\x24\x22\x8e\x4b\xe2\x12\xfe\x81\x11\x3c\x15\xe2\xcb\x44\xc4\x65\x4e\x6c\xc1\x7f\x2e\x31\x16\xad\xf8\x01\x7f\x5a\x13\xdb\x92\x38\x46\xac\x35\x71\x0b\x7e\x8d\xf0\x12\x17\xc4\x29\xf8\x4c\x88\xab\x5c\xb8\x83\x8f\x28\x15\xbe\xac\xf6\xdc\x6b\x19\x8b\x80\x1d\xfc\x22\xe7\x15\x71\x0e\x5e\x52\xe2\x0e\x38\x63\xe2\x28\x23\x4e\xb5\xf0\x88\x35\xc8\x5d\xdb\x49\xce\x53\x70\xd1\x48\x4c\x88\xbf\xac\x88\xeb\x4a\xb0\x21\x16\x60\x6e\x63\x89\x15\x79\x04\xb6\x1a\x5c\xa7\x82\xa1\x6a\x89\x0d\x78\xcd\x89\x73\xec\xd5\xa2\x99\xba\x26\x8e\x63\x8f\x01\x79\x85\xce\x0a\x89\xc3\xe9\xab\x10\xcc\xba\x91\x38\x6a\x4b\x6c\x3a\xd9\x8f\x3c\x66\x9e\x23\x68\xc5\xf9\x4d\x04\x33\x72\x07\x5b\xe0\xc6\xd6\xc4\x75\x29\x39\xb7\x8d\xc4\x03\x7f\xb0\x89\xbc\x35\x88\xaf\x96\x5f\x68\xc4\xe9\xac\x15\x3e\x90\x37\xc4\x04\x9e\x90\xa3\x26\x25\xce\x53\xd1\x47\x6e\x7d\x6d\x20\x07\xf0\xd5\x09\xb6\xa4\x25\x4e\x62\x62\x53\xca\x7e\x60\x44\xfc\xc0\x00\x7c\xd8\xd7\x20\xf7\x5a\xfc\x39\xed\x65\x92\xbf\xa4\x90\xb8\x31\x8f\x9c\x83\xbf\xaa\x26\x4e\x8c\xf0\x07\x8d\xe5\x5a\x6a\x00\x35\x94\x15\xc4\x8d\xaf\x21\xe4\x3b\xf6\xb5\x9a\xc6\xc4\x69\x4e\x5c\x36\xa2\x17\xe8\x06\x36\x1b\x43\x5c\xc2\x57\x29\x1c\xe4\x25\x71\x1e\x13\xeb\x56\xb4\x0c\x3f\x88\xb7\x88\x85\xa7\x0a\xf9\x47\xee\xa0\xeb\xda\xeb\x20\x16\xff\x58\xeb\xf2\x85\x7c\xe4\xf2\x5b\xc5\x72\x9e\x14\xd0\x5c\x2d\x35\x0e\x2e\xba\x5c\xfc\x23\x2f\x31\xe2\xf1\xb8\xb4\x11\x5e\x33\x2b\x1a\x02\x77\xb0\x55\x15\x92\x03\xe4\x0b\x31\x64\x89\x70\xdd\x55\xa2\x87\x32\xf2\x7a\x02\xdf\xd0\x4a\x4b\xdc\xd5\xa2\x41\xd4\x7f\x1e\x49\xcd\xe7\xad\xe4\x01\x39\x03\x8e\x18\xb1\x65\xc4\x11\x70\x5a\xc1\xd7\xe0\xbc\x48\x88\xd3\x46\x9e\xa1\x4b\x0d\x5d\xb6\x82\xdb\x1a\xc1\xe7\xea\x30\x97\x5a\x82\x46\x71\x4e\xa1\x26\x3a\xf0\xae\xa5\x16\x5d\xbc\x3e\x26\xd4\x00\x6c\xa0\x36\x71\x1e\x95\xb0\x07\x8d\x64\x92\x43\x60\x71\xf9\xc1\x6f\xe2\x6d\x41\xbb\xb1\xd4\x18\xe2\x40\xed\xb8\x58\xad\xcc\x01\x37\xf2\x04\x3f\x4e\x03\x96\xb8\xad\x7c\xae\xac\x70\x00\xce\xe0\xc3\xc5\xab\xe5\xdc\x85\xae\x4a\x60\xf6\xfa\xe9\xfc\x99\x03\x3f\xe0\x0f\x1a\x73\xf5\x58\x49\x8d\xa3\xd6\x50\x83\xc8\x83\x05\xcf\xb5\xaf\x37\x9c\x7d\xb1\xd4\x15\xec\xe1\xfc\x84\x46\xf3\x5c\xb8\x6b\x0b\xd1\x35\xb0\x76\x58\x5f\xca\x7a\x77\xae\xb4\x12\xb3\x29\xfc\x1d\xa2\x65\x4d\xf9\xa8\xdd\x4e\xb4\x53\x21\xd7\x99\x8c\x83\x3b\x57\x0f\xa5\x60\x86\x3e\xa0\x41\x68\x36\xf5\x38\x51\x03\xae\xb6\x50\x0b\x8d\xe4\x1c\x75\xda\xf9\x3b\x05\x75\x8e\x33\x19\x3a\xc0\x7e\xc4\x0a\x0e\xc0\xbd\xc6\xb9\x99\xc9\x5d\x90\x7a\xbe\xe1\xdf\xe5\xc8\xc8\xb9\x0f\xdb\xb0\x03\xcd\x26\xb5\x68\xa1\x2b\x25\x36\xd8\x45\x4d\x47\xfe\x8e\x43\xcd\x42\x9f\x49\xe2\xe7\x4a\x79\x4e\xb4\x9c\x21\xa8\x73\xe8\x1b\xf1\xb9\x7b\xaf\x93\x3a\x49\xad\xbf\xff\x32\x7f\x6e\x46\x32\x8f\x7a\x87\xf6\x9d\x3e\x72\xc9\x2d\xe6\xac\x3f\x4b\x71\x97\x18\x7f\xdf\xe2\xde\x02\x16\x8c\x23\x06\xf0\x89\x9a\x44\x2d\x23\xc7\xa5\xd7\x4d\xd3\xfa\x3b\xa8\x7b\x79\xc7\xe3\xe3\xb0\xb6\xfe\x7e\xf5\x35\x09\x7c\xb2\x6e\xf1\xd8\xf3\xbf\xee\x2a\x7c\x3f\x7a\xad\xcf\x7f\xec\x5a\x9f\xfd\x4f\x08\x83\xe0\x4a\x67\xb2\x0e\x83\x60\x71\xed\xdf\xe6\x62\x1d\x06\xab\xa7\x2e\xf2\xf5\x46\xf8\xfd\x93\x6b\x7e\x9f\xfb\x75\xdd\xef\xd3\x5f\x8c\x37\x21\x7f\xab\x8d\x7f\xea\xbe\x5d\xff\xbc\xbb\xf9\x7d\x2f\xf6\x15\x5d\xea\x4e\xbd\x01\x5c\xa1\x11\xdd\xa9\x24\x8b\x93\xb5\x42\x4f\xb9\x7b\xde\x72\x2e\xb3\x24\x5a\xb9\x71\x74\x8a\x3b\xe9\x24\xff\x7e\xea\x79\x19\xe7\x45\x96\xc4\x69\x91\xa5\x6b\x15\xad\x1e\xc2\x40\xc3\xf5\x0f\x2e\xc8\xaf\x2e\xb2\x9d\xf2\x01\x02\xd7\xce\x7d\x3f\x3c\x91\xad\xd7\x6f\x76\x81\xf7\xff\x0b\x00\x00\xff\xff\x35\x15\x21\x0b\x00\x10\x00\x00")

func resResGoBytes() ([]byte, error) {
	return bindataRead(
		_resResGo,
		"res/res.go",
	)
}

func resResGo() (*asset, error) {
	bytes, err := resResGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/res.go", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1565256982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonCaseFromProdoctJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x94\x4d\x8f\xd2\x40\x18\xc7\xef\x7c\x8a\xc9\x9c\x7b\x68\xbb\x7b\xda\xab\x07\xaf\xde\x8d\x07\xd2\x1d\x63\xe3\xba\x90\x6d\x37\x31\xd9\xf4\xd0\xc4\x45\xb3\xbb\x04\x12\x5e\x12\x88\x82\x55\x8a\x04\x5b\xaa\x11\x5f\x42\x15\xbf\x0c\xf3\xd2\x93\x5f\xc1\x74\x8a\xa5\x2d\xd4\xe2\xc1\xbd\xc0\x4c\x9f\x67\xfe\xfd\x3d\xff\x79\xfa\x5c\x94\x00\x80\x4a\xe5\x18\xc1\x23\x20\x09\xe1\xe6\xb4\xfc\x24\xdc\x40\x3a\xbe\x0c\xcc\x16\x7b\x3e\xc5\x57\x13\x7c\xd3\x25\x9f\xaf\x99\xd7\x21\x56\x8d\x0c\xbe\xac\x16\xef\x70\xcb\x84\x3c\x5d\x29\x6b\x48\x83\x47\xe0\x7e\x09\x00\x00\x2e\xf8\x2f\x00\x50\x3d\x0e\x05\x45\x51\xf8\xf3\x40\x57\xf5\x13\xae\x1b\x09\xd1\xf6\x64\xb5\xbc\x16\x25\x18\x27\x68\x3a\xaa\x6e\x84\x92\x62\x29\xc1\x58\x31\xa3\xea\xda\xc1\x74\x24\x4a\x30\x8e\x1a\xeb\xd5\x03\xfe\x6f\x08\x3b\xf8\xe4\x5d\x7c\xb4\xe7\xe3\x1f\x1d\x3c\xfa\xc8\xe6\x36\x9b\x8f\x71\xe3\x6b\xd0\x36\xf1\xac\x4f\xdd\x2e\xed\xd8\xff\xc6\x2b\xe7\xf2\xb2\x9f\x03\xea\xbb\x6c\xd9\xc2\x97\xf6\x01\x71\xac\xa0\xdd\x63\x9e\x47\xfb\xcf\xb0\x57\xa3\xaf\xcd\x44\x19\xc2\x5f\xf5\xa5\x1c\x7d\xea\x38\x87\xc4\xb1\xf0\x87\x57\xa1\xd9\xbc\x24\x98\xca\x44\x4f\xab\x48\xd1\x79\xea\x27\x9f\xfa\x43\xd2\x68\xd2\xd1\x22\x2a\x98\xbd\x79\x1f\xd5\x9c\x3e\xa2\x6a\x77\x1e\x21\xe5\xf1\xbd\x8a\x7a\x1a\x1e\xd4\xcf\xce\xd1\x9e\x98\x52\x9e\x0d\xab\x6f\xf5\x22\x27\x32\x08\x77\xcf\x2a\xe7\xd5\xf5\xdb\x53\xa1\xed\xfb\xc8\xc2\xa4\x80\x24\x21\x1b\xd9\xdc\x0d\x67\x91\x0b\x58\x32\x3c\x0f\xcb\x27\x1a\x4a\x85\x0d\x61\x3f\x12\xb9\x88\x44\x22\x8e\x45\xdc\xb7\xd4\x9a\xfd\x67\x92\x83\x7c\x12\x5c\xab\x6f\x60\x6e\xc5\x96\xc3\x3d\x61\x0a\x9d\x49\x74\x3a\xff\x0e\xc8\x8b\x26\xbe\x1a\xfe\xfa\x7e\x13\x35\x3b\x79\x39\xdd\xdd\xef\xa0\xa8\xe7\x41\x62\xca\x80\x78\xd2\x80\xed\xd9\x53\x0a\x57\xc6\xef\x00\x00\x00\xff\xff\xac\x35\x04\x4d\x6b\x05\x00\x00")

func resJsonCaseFromProdoctJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonCaseFromProdoctJson,
		"res/json/case-from-prodoct.json",
	)
}

func resJsonCaseFromProdoctJson() (*asset, error) {
	bytes, err := resJsonCaseFromProdoctJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/case-from-prodoct.json", size: 1387, mode: os.FileMode(420), modTime: time.Unix(1564469536, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonSuccessJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x4a\xce\x4f\x49\x55\xb2\x52\x30\xe4\xaa\x05\x04\x00\x00\xff\xff\xb8\xfe\xe3\x6c\x0f\x00\x00\x00")

func resJsonSuccessJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonSuccessJson,
		"res/json/success.json",
	)
}

func resJsonSuccessJson() (*asset, error) {
	bytes, err := resJsonSuccessJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/success.json", size: 15, mode: os.FileMode(420), modTime: time.Unix(1564618548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonZentaoSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x3d\x6b\xc3\x30\x10\x40\xf7\xfc\x8a\xe3\x66\x0f\xe9\xe7\xe0\xad\xa4\x8b\x97\x52\x48\xb7\xd2\x41\xd8\xe7\x70\x60\x4b\x41\x3a\x77\x68\xc9\x7f\x2f\x52\x02\x2d\xf1\x99\x56\x4b\x21\xa0\x29\xf1\x3d\xd9\x0f\x73\x0f\x7f\xae\x00\xb0\x75\x1d\x61\x0d\x57\x55\xbc\xf8\x20\x2b\xc6\x6d\x49\x84\xed\x2e\x60\x0d\xf1\x08\x00\x8e\xae\x9b\x06\x8a\x83\xd7\x34\x80\x13\x48\xb0\xe9\xe2\xfd\xeb\x75\xf5\x3d\xda\x1c\x1f\x8a\xa6\x1b\xd9\xe2\x0f\xf0\x64\xc6\x04\x1e\xce\x41\x13\x1e\xa9\x37\xd3\x20\x58\x43\x6f\x86\x40\x27\x74\xa8\x16\x84\xd7\xaa\xb0\x1d\x98\xac\x68\xc6\xcd\x8c\x64\x2b\x6f\x54\x25\x5b\x21\xdf\x9b\x96\x34\x6b\xa3\xc1\x6c\xf1\xad\x2a\x0e\x2c\xaa\x73\x7b\x36\xcf\xd6\xdd\xe9\xbb\xdc\xb3\xba\xc9\xe7\x66\x49\x26\x7e\xfa\xd5\x75\xaf\xba\x84\x42\x2c\x50\xf3\xbd\xcc\xd1\xe2\x0b\xa6\xdf\xb7\xe3\x49\x6c\x8d\xd0\xce\x79\x2e\x19\x97\x8c\xb3\x32\xfe\x93\xec\xff\x3a\x7e\x27\x1f\xd8\xd9\x52\x71\xa9\x78\xbe\xc9\x8b\xa9\x78\xef\xd9\x79\x96\xf2\x35\x2e\x1d\x5f\x66\xc7\xab\xf8\xef\xf0\x15\x00\x00\xff\xff\x54\x3e\xa5\x1c\x43\x0b\x00\x00")

func resJsonZentaoSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonZentaoSettingsJson,
		"res/json/zentaoService-settings.json",
	)
}

func resJsonZentaoSettingsJson() (*asset, error) {
	bytes, err := resJsonZentaoSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/zentaoService-settings.json", size: 2883, mode: os.FileMode(420), modTime: time.Unix(1565055118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xb1\x0a\xc2\x50\x0c\x85\xe1\xd9\xf3\x14\x59\x02\xda\xa5\x7b\xbd\x5b\x27\xf7\xbe\x40\xc8\x3d\x4a\xd1\x96\x8b\x89\x20\x88\xef\x2e\x16\xba\x7d\xff\xf2\x37\xf3\xbb\xdd\x28\x8b\xcd\x2b\xd0\x77\x28\xa5\x4c\x23\xdc\x82\x97\x3a\x88\x88\x56\xe4\x9c\x0f\xfe\x2d\x1a\x88\x64\x8b\x3d\xc0\x77\xa3\x67\x0c\xd0\xc0\x93\x56\x17\x6e\xc4\x34\x9e\xd1\xf5\xc0\xf5\xb5\xfa\xf6\x3e\x9e\xe4\x83\x83\x06\xbe\xbf\x00\x00\x00\xff\xff\x38\x8e\xa5\x8b\x72\x00\x00\x00")

func resTemplateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateGoTpl,
		"res/template/go.tpl",
	)
}

func resTemplateGoTpl() (*asset, error) {
	bytes, err := resTemplateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/go.tpl", size: 114, mode: os.FileMode(420), modTime: time.Unix(1563770870, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateLuaTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc7\xb1\x0a\xc3\x20\x14\x05\xd0\xfd\x7e\xc5\x2b\xc5\x31\xb8\xa7\x6e\x99\xba\x67\x0b\x19\x6c\xbc\x43\xc0\x8a\xf8\x9e\xa5\x9f\x5f\x2c\x64\x3b\xe7\x7e\xf3\x5d\x9b\x7f\x9d\xc5\xb3\x7c\x24\xf7\x88\x69\xda\x36\x84\x10\xd6\x05\x47\x54\x3e\xd3\x2c\x22\x2e\xc1\x4e\xcb\x1c\x16\xa7\x50\x63\xd5\x2b\xe0\xb7\xf2\x30\x9d\xe1\x14\x8d\x31\xbd\xf9\x27\xd6\xe5\x81\x7d\xc7\xf0\x2f\x00\x00\xff\xff\x41\x2b\xc4\x57\x69\x00\x00\x00")

func resTemplateLuaTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateLuaTpl,
		"res/template/lua.tpl",
	)
}

func resTemplateLuaTpl() (*asset, error) {
	bytes, err := resTemplateLuaTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/lua.tpl", size: 105, mode: os.FileMode(420), modTime: time.Unix(1563771077, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePerlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc7\x31\x0e\x02\x20\x10\x44\xd1\x7e\x4e\xb1\xc6\x50\xd3\x23\x1d\x95\x3d\x17\x40\x98\x82\x04\x09\x61\x57\xe3\xf1\x0d\x26\x56\xff\xfd\xeb\xc5\xbf\x74\xfb\x47\x9f\x9e\xf3\x2d\x8b\x7b\x20\xc6\x9c\x6e\xa8\x45\x79\x6f\x41\x44\x5c\x83\x75\x1b\x3c\x16\xa7\x50\xe3\xd2\xff\x80\x9f\xc5\x6a\x1a\xe0\x14\x9b\xa5\x3d\xf9\x23\x72\xc2\xe9\x37\x00\x00\xff\xff\xa8\x25\x0f\x03\x61\x00\x00\x00")

func resTemplatePerlTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePerlTpl,
		"res/template/perl.tpl",
	)
}

func resTemplatePerlTpl() (*asset, error) {
	bytes, err := resTemplatePerlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/perl.tpl", size: 97, mode: os.FileMode(420), modTime: time.Unix(1563772463, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePhpTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xb1\x2f\xc8\x28\xe0\xb2\xb1\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x50\x50\x50\x4d\xe1\x2a\xc9\x2c\xc9\x49\x05\xb1\x15\x54\x8b\xb9\x8a\x4b\x52\x0b\x8a\x61\x1c\xae\xd4\x8a\x82\xd4\xe4\x92\x62\x2b\x2e\xd5\x62\xae\xa2\xd4\xc4\x94\xdc\x54\x30\x93\x2b\xc4\xd9\x9a\x0b\xcc\xb0\xb7\xe3\x02\x04\x00\x00\xff\xff\xc5\xf3\x0b\x5b\x58\x00\x00\x00")

func resTemplatePhpTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePhpTpl,
		"res/template/php.tpl",
	)
}

func resTemplatePhpTpl() (*asset, error) {
	bytes, err := resTemplatePhpTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/php.tpl", size: 88, mode: os.FileMode(420), modTime: time.Unix(1563770610, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePhpYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xdf\x6e\xd2\x50\x1c\xc7\xaf\x3d\x4f\x71\x12\x62\xd0\x45\x3d\x65\xde\x15\xe2\x4c\x96\x98\xec\xce\x8b\xbd\x40\x2d\x67\x42\x1c\xb4\x69\xcf\x92\xe9\x15\x20\x5a\x99\x45\x0c\x7f\x44\x59\xa7\x30\x24\x12\x95\xd5\x84\x19\xca\x1f\xc7\xcb\xf4\x9c\xd3\x5e\xf1\x0a\xa6\x54\x63\x2f\xe6\x6e\x9a\xf4\x7c\xf2\xfd\x9c\xef\xef\x77\x52\x5b\xd7\x75\x90\x4a\xa5\x76\xb7\x81\x2c\xe9\x78\x27\x2d\x42\x08\x13\x82\x00\x48\x96\xec\xe3\xe0\x07\xf2\xe6\x90\xbd\x9a\xf0\x0f\x73\xfa\xab\x05\x74\x82\x55\x5d\x04\x10\xc2\xdb\xc1\xe7\x5a\x36\x2d\xc2\xe0\x2c\x21\x08\x02\x8c\x41\x5a\xb3\xb9\x55\xe4\xad\xc1\x1a\xe6\xa5\x1c\x16\x21\xab\x34\xe8\xa2\x10\xe6\xfd\xde\x4f\xff\xe4\xf4\xb2\x78\x42\x88\x44\xbc\x8b\x06\x7d\x31\x60\xa3\x3e\xef\x9d\xf1\x4e\x39\x6c\x40\xdf\x56\x69\xdd\xa4\xf6\x4b\xde\x2d\x5e\x66\xd8\x8c\x1a\x78\x69\x4a\x8d\x79\x3c\xbc\x35\xce\xcc\x8a\x5f\x3f\x5b\x63\x39\x83\xe5\x27\xaa\x92\xcd\x13\x11\x12\xed\x00\x03\x80\x0f\x55\x2c\x93\xc8\x50\x6b\xdf\x4e\xc4\x1b\x1d\x6c\xb5\x30\x59\xeb\x87\x6f\xd4\x68\xdd\x5c\x2f\xc3\x75\x46\xd4\x9e\xd2\x59\xd3\x75\x8e\x68\x75\x4c\x6b\xf6\xda\x11\x5a\x45\x18\x83\xf7\xff\x6a\x98\xf5\x89\x59\xc7\x7c\xde\x60\x1f\xad\x5b\x81\xd1\x9d\x0f\x98\x55\xa1\x9f\x3b\x5e\xcf\x04\x40\xc3\x52\x3a\x87\xc3\x1a\xd0\x2b\x77\x98\xf5\x3d\xd8\x83\x31\x63\xed\x01\x5d\xb6\x69\xdd\xfc\xd3\x94\x7f\xeb\x7a\x47\x25\xd7\x19\xad\x16\x66\x8c\xd6\x26\xac\x6b\xb0\xf1\x90\x77\xca\xfe\x57\xd3\xb3\x8b\xbc\x34\xf5\xad\x82\xbb\x3c\x61\x66\xd1\x75\x0a\x9e\x71\x1e\xf6\x8b\x8a\x5d\x67\x84\x36\xe0\x06\xfa\x17\xb5\x0a\xbc\x39\x74\xe7\x7d\xde\x2d\xb2\xe3\x25\xab\x9e\xae\x16\x26\x42\x6c\x3c\xf4\xbe\xf4\x79\xa7\xec\x3a\x33\xcf\x3e\x67\xef\xdf\xb0\x77\x06\x1d\xb5\x43\x17\xad\x95\xbc\xc2\x73\xd6\x9d\xb8\x17\xaf\x33\x84\xa8\xba\x88\xd0\xe3\x2c\xc9\x1c\x3c\xba\x23\x2b\x39\x84\x25\xfd\xa9\xae\xec\x11\xf4\x0c\xe7\x89\xa4\x48\x64\x0f\x11\x0d\x63\x94\x93\x74\x82\x35\x74\x98\x56\x64\xa4\x4b\x39\x75\x1f\x83\xdd\xed\x24\x00\x58\xce\x28\x30\x1e\x8b\x27\x81\x2e\x6b\x59\x95\xe8\x0f\x14\xed\x61\xf0\x52\x89\x1b\x37\x93\xff\xa7\x9b\x57\xd2\xbb\x01\x05\x5b\xf7\xc0\xef\x00\x00\x00\xff\xff\x02\xb1\x4f\xb8\xea\x02\x00\x00")

func resTemplatePhpYamlBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePhpYaml,
		"res/template/php.yaml",
	)
}

func resTemplatePhpYaml() (*asset, error) {
	bytes, err := resTemplatePhpYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/php.yaml", size: 746, mode: os.FileMode(420), modTime: time.Unix(1563375990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePythonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\xa8\x2c\xc9\xc8\xcf\x33\xe6\x52\x57\x57\xe7\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x50\x50\x50\x4d\xe1\x2a\xc9\x2c\xc9\x49\x05\xb1\x15\x54\x8b\xb9\x8a\x4b\x52\x0b\x8a\x61\x1c\xae\xd4\x8a\x82\xd4\xe4\x92\x62\x2b\x2e\xd5\x62\xae\xa2\xd4\xc4\x94\xdc\x54\x30\x93\x2b\xc4\x19\x6c\x16\x88\x0d\x08\x00\x00\xff\xff\x8c\x97\x81\xd4\x6b\x00\x00\x00")

func resTemplatePythonTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePythonTpl,
		"res/template/python.tpl",
	)
}

func resTemplatePythonTpl() (*asset, error) {
	bytes, err := resTemplatePythonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/python.tpl", size: 107, mode: os.FileMode(420), modTime: time.Unix(1564733381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateReadmeTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x4d\x4a\xc3\x40\x14\x00\xe0\x7d\x4f\x51\x70\x5d\x67\xef\x56\x5d\x7b\x86\x31\xbe\x5a\xc1\x98\xd0\x79\x42\x75\x95\xc4\x40\xb0\x46\x2a\xb4\x50\x88\x11\x82\x3f\x10\xd4\xd2\x45\x0b\x4d\xab\x34\x97\x99\xf7\x66\xb2\xf2\x0a\xae\x7a\x81\xaf\xd3\xb6\x71\xc6\xf9\xb7\xdd\x8e\x29\xd9\xf0\xf4\x83\xea\xe9\xdf\x6f\x4a\x4f\x29\x0c\x7c\x70\x50\x99\xaf\xc2\x0e\x23\x5d\xcd\xf6\x68\xb4\xe2\x22\xe1\x45\x69\xb2\xb8\xf9\x4c\xed\x3c\x34\xd1\xba\xc9\x03\x5d\xbf\x70\x1a\xea\x2a\xb0\xc9\x92\xe6\x6b\xda\x4c\x5a\x3b\x55\x57\xb3\xc3\x93\xa3\x63\xbe\x1f\xd3\xfb\xd2\x64\x31\x2f\xca\x26\x19\x36\x79\x60\x26\xa5\xfe\x79\x33\x45\xc8\xcf\x35\x3f\xbe\xb6\x3a\x6d\x1a\x45\x36\xb8\xe3\x62\xa5\xb7\x0f\x3d\x44\x5f\x1d\x08\x71\x7e\x81\xbd\xeb\xd3\x7d\xc7\x73\x05\x48\x75\xa3\xbc\x2e\x8a\x5b\xb8\x42\xe9\x49\xec\x0a\xec\x03\x08\x57\x2a\x84\xbe\x18\x9c\x79\x8e\x50\xd2\xf5\x2f\xe1\x3f\x00\x00\xff\xff\x41\x8f\x04\x29\xd2\x00\x00\x00")

func resTemplateReadmeTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateReadmeTpl,
		"res/template/readme.tpl",
	)
}

func resTemplateReadmeTpl() (*asset, error) {
	bytes, err := resTemplateReadmeTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/readme.tpl", size: 210, mode: os.FileMode(420), modTime: time.Unix(1563770285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateRubyTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\x2a\x4d\xaa\xe4\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x50\x50\x50\x4d\xe1\x2a\xc9\x2c\xc9\x49\x05\xb1\x15\x54\x8b\xb9\x8a\x4b\x52\x0b\x8a\x61\x1c\xae\xd4\x8a\x82\xd4\xe4\x92\x62\x2b\x2e\xd5\x62\xae\xa2\xd4\xc4\x94\xdc\x54\x30\x93\x2b\xc4\x99\x0b\x44\x03\x02\x00\x00\xff\xff\xa7\x0f\xc6\x84\x60\x00\x00\x00")

func resTemplateRubyTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateRubyTpl,
		"res/template/ruby.tpl",
	)
}

func resTemplateRubyTpl() (*asset, error) {
	bytes, err := resTemplateRubyTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/ruby.tpl", size: 96, mode: os.FileMode(420), modTime: time.Unix(1563773303, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateShellTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x48\x4a\x2c\xce\xe0\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x50\x50\x50\x4d\xe1\x2a\xc9\x2c\xc9\x49\x05\xb1\x15\x54\x8b\xb9\x8a\x4b\x52\x0b\x8a\x61\x1c\xae\xd4\x8a\x82\xd4\xe4\x92\x62\x2b\x2e\xd5\x62\xae\xa2\xd4\xc4\x94\xdc\x54\x30\x93\x2b\xc4\x99\x0b\x44\x03\x02\x00\x00\xff\xff\x6c\x97\xda\x8f\x60\x00\x00\x00")

func resTemplateShellTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateShellTpl,
		"res/template/shell.tpl",
	)
}

func resTemplateShellTpl() (*asset, error) {
	bytes, err := resTemplateShellTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/shell.tpl", size: 96, mode: os.FileMode(420), modTime: time.Unix(1563773557, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateTclTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc7\x31\x0a\x02\x31\x14\x04\xd0\x7e\x4e\xf1\x45\x52\xa7\x5f\xb6\xdb\xca\x7e\x2f\xb0\x26\x03\x06\x62\x08\x99\xaf\x08\xe2\xdd\x25\x82\xdd\x7b\xe7\x53\x7c\x68\xc4\x6b\x69\x91\xed\x69\x9e\xaa\x6e\x10\xdd\xd2\x21\xda\x1b\xeb\xba\x6f\x98\xbe\xe4\xc5\xcc\x42\x86\x17\xaf\x9c\xb6\x20\xc8\xd9\xf5\x0f\xf8\xea\x4c\xae\x05\x41\x18\x3c\xf2\x9d\x3f\x62\xdf\xf0\xc1\xd4\x37\x00\x00\xff\xff\xd9\x9d\x36\x9f\x6e\x00\x00\x00")

func resTemplateTclTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateTclTpl,
		"res/template/tcl.tpl",
	)
}

func resTemplateTclTpl() (*asset, error) {
	bytes, err := resTemplateTclTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/tcl.tpl", size: 110, mode: os.FileMode(420), modTime: time.Unix(1563774894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/messages_en.json":                 resMessages_enJson,
	"res/messages_zh.json":                 resMessages_zhJson,
	"res/res.go":                           resResGo,
	"res/json/case-from-prodoct.json":      resJsonCaseFromProdoctJson,
	"res/json/success.json":                resJsonSuccessJson,
	"res/json/zentaoService-settings.json": resJsonZentaoSettingsJson,
	"res/template/go.tpl":                  resTemplateGoTpl,
	"res/template/lua.tpl":                 resTemplateLuaTpl,
	"res/template/perl.tpl":                resTemplatePerlTpl,
	"res/template/php.tpl":                 resTemplatePhpTpl,
	"res/template/php.yaml":                resTemplatePhpYaml,
	"res/template/python.tpl":              resTemplatePythonTpl,
	"res/template/readme.tpl":              resTemplateReadmeTpl,
	"res/template/ruby.tpl":                resTemplateRubyTpl,
	"res/template/shell.tpl":               resTemplateShellTpl,
	"res/template/tcl.tpl":                 resTemplateTclTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		"json": &bintree{nil, map[string]*bintree{
			"case-from-prodoct.json":      &bintree{resJsonCaseFromProdoctJson, map[string]*bintree{}},
			"success.json":                &bintree{resJsonSuccessJson, map[string]*bintree{}},
			"zentaoService-settings.json": &bintree{resJsonZentaoSettingsJson, map[string]*bintree{}},
		}},
		"messages_en.json": &bintree{resMessages_enJson, map[string]*bintree{}},
		"messages_zh.json": &bintree{resMessages_zhJson, map[string]*bintree{}},
		"res.go":           &bintree{resResGo, map[string]*bintree{}},
		"template": &bintree{nil, map[string]*bintree{
			"go.tpl":     &bintree{resTemplateGoTpl, map[string]*bintree{}},
			"lua.tpl":    &bintree{resTemplateLuaTpl, map[string]*bintree{}},
			"perl.tpl":   &bintree{resTemplatePerlTpl, map[string]*bintree{}},
			"php.tpl":    &bintree{resTemplatePhpTpl, map[string]*bintree{}},
			"php.yaml":   &bintree{resTemplatePhpYaml, map[string]*bintree{}},
			"python.tpl": &bintree{resTemplatePythonTpl, map[string]*bintree{}},
			"readme.tpl": &bintree{resTemplateReadmeTpl, map[string]*bintree{}},
			"ruby.tpl":   &bintree{resTemplateRubyTpl, map[string]*bintree{}},
			"shell.tpl":  &bintree{resTemplateShellTpl, map[string]*bintree{}},
			"tcl.tpl":    &bintree{resTemplateTclTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
