// Code generated by go-bindata.
// sources:
// res/messages_en.json
// res/messages_zh.json
// res/res.go
// res/json/case-from-prodoct.json
// res/json/success.json
// res/json/zentao-settings.json
// res/template/bat.tpl
// res/template/go.tpl
// res/template/lua.tpl
// res/template/perl.tpl
// res/template/php.tpl
// res/template/php.yaml
// res/template/python.tpl
// res/template/readme-en.tpl
// res/template/readme-zh.tpl
// res/template/ruby.tpl
// res/template/shell.tpl
// res/template/tcl.tpl
// DO NOT EDIT!

package res

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resMessages_enJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x59\x5d\x6f\xdb\x36\x14\x7d\xcf\xaf\xb8\x30\x60\x64\xc3\xd2\xf5\xdd\x4f\x6b\xd3\x74\x0d\xb6\x76\x41\xec\xac\xd8\x96\x95\xa0\xa5\x6b\x8b\xb3\x4c\x0a\x24\x15\xc7\x2d\xfa\xdf\x07\x52\x92\x6d\x51\xe4\x95\xf3\xd2\xc6\x3e\x87\xf7\x5c\x7e\xdc\x0f\xd2\xdf\x2e\x00\x26\x25\x97\xeb\x9a\xaf\x71\x32\x83\x09\xca\x57\x0f\xf3\xc9\x95\xfb\x7a\x8b\xc6\xf0\x35\x9a\xc9\x0c\xfe\xb9\x00\x00\xf8\xe6\xff\x05\x98\x88\xdc\x51\xb3\x5a\x6b\x94\x96\x55\x1a\x57\xa8\x51\x66\xe8\xc7\x79\x46\x3b\xf6\x84\x06\x31\x9a\xd5\x5c\x9a\x92\x5b\xa1\x64\x82\xea\x99\xdf\xaf\x62\xfa\x06\x47\xb5\x0d\x5a\xb8\x1b\xd7\x75\xb4\xa9\x01\xab\x60\x6a\x28\xc5\xda\x20\x3b\x2c\x56\x4c\xef\xc1\x20\xdc\xc8\x75\x29\x4c\x01\x43\x62\xa0\x1a\x25\x77\xea\x31\x79\x52\x7a\x54\x6e\x20\x11\x51\xd8\x29\xbd\x79\x27\x74\x54\xe0\xb3\xd2\x1b\xe8\x81\x81\xc0\x81\x40\xcd\x01\x65\xd4\x78\xbb\x0e\x49\xdb\x1d\x4e\xf8\xfe\xb5\x88\x5a\xbe\x2e\x84\x44\x93\x5e\x96\x0e\xa7\x0e\x5a\x5d\x55\x4a\x5b\x7a\xeb\x95\x2c\xf7\x80\xf2\x87\xa9\xf9\x11\xb8\xcc\xe1\x6b\xe1\xff\xec\xc6\x80\x30\xc0\xb3\x0c\x2b\xcb\x97\x65\xda\x9b\x97\x59\xa1\x16\xda\x58\xae\x2d\xc3\x67\xcc\x6a\x6f\x3c\xe6\xf3\xdc\x71\xe0\x66\xc8\x09\xbc\x0a\x79\xc4\x5a\xa1\xcc\x47\x44\x6f\x64\x7e\x86\x64\x9f\x45\x6d\x8e\x9f\x67\xc6\x4d\x7c\x5b\x1a\xd7\xaf\x39\x71\x02\x8e\x14\x97\x04\xb8\x1d\x49\x02\x6e\x86\x49\x39\xe7\x36\x29\xd6\x11\x0e\x52\x57\x60\x2a\x94\x39\x4c\x73\x83\x99\x21\xb7\x74\x89\x6b\x21\x19\x97\xbc\xdc\x27\xe4\xef\x6b\x09\x26\xd3\xa2\xb2\x26\xe9\xc1\x5b\x67\xc5\xe5\xba\xd6\x10\x58\x34\x16\x34\x9a\xba\xb4\xd4\xbc\x75\x2d\xd9\xc0\xf6\x0b\xb5\x4f\x38\x20\x24\xac\x54\x99\xa3\x86\xcb\xa9\xb9\x04\x25\xdd\x92\xfc\x31\xa7\x5c\xb0\x62\x8b\x6c\xa5\xd5\x96\x59\x15\xf5\xe1\xbd\x56\x5b\x58\xa8\xa4\xbe\xc7\xbb\x4c\x7f\x5c\x79\xe8\x2d\x7d\x4c\x58\x59\x5e\x46\x15\x17\x7d\x24\xd0\x6b\x50\xc2\x70\xc5\x4d\x7c\x35\xef\x7a\x40\x60\xd6\x83\x84\xd5\x15\x17\x71\x6f\xdf\xf7\x80\x70\x71\x1c\x48\x45\xda\x46\x54\xf1\x18\xeb\x01\x61\x74\x39\x90\x4e\x54\x98\x30\xdb\x03\x06\x41\x8b\x15\x9d\x16\xb0\x8a\xaf\xec\xbc\x8f\x44\xec\x92\x6b\x9b\x15\x98\x6d\x2a\x25\xa4\x4d\x94\x9b\x21\x3c\xa8\x38\x07\x0a\x95\x66\x9e\x2b\xcc\x2c\x6b\xe3\x32\x9a\x6b\x3c\x03\xee\x03\x46\x98\x70\x7a\x2c\x42\x90\x67\xb6\xe6\x25\x25\xf8\xc6\x33\xc6\x04\xfb\x2c\x42\x50\x2a\x76\x5c\xcc\xf8\x5e\x7d\x52\x10\xa5\x04\x92\x01\x8d\x3a\x6d\xae\xc0\xb2\xae\xa0\x37\xa9\xe8\x8c\xba\xde\x0e\x38\xd6\xe1\x69\xda\x99\xe4\x80\xb1\xfc\xc2\x5c\x22\x4e\x97\x16\x9f\x4b\xca\xbd\x4b\x57\x3e\x63\x3b\x62\xda\x8b\x38\x9b\xec\x6d\xf9\x1a\x99\x5a\x31\x6e\x57\x89\xde\xd6\xcd\x43\xad\xa0\x47\x18\xf4\xb4\x27\x24\x2a\x3c\xf9\xb6\x2a\x91\x59\xc5\xea\x54\xe1\xf6\x0c\x97\xa9\x6b\x83\x33\x48\x07\x6c\xc0\x23\x44\x85\x61\x23\xd1\xeb\xa2\x1f\x7c\x99\x85\x9d\xb0\x05\x5c\xfe\x72\x09\x05\x37\x10\x1b\x16\x49\x1c\x23\x43\x09\xd7\xf6\xaa\xd6\x2c\x53\x39\x1a\x56\xa0\x8e\xaf\xc8\x67\x2d\x2c\x82\x63\x82\x67\x42\x9f\x19\x76\xe3\x51\xf6\xb9\x09\x27\xed\x45\x2f\x9f\xa4\xcf\x5f\x9f\x76\x05\x19\x97\xb0\x44\xd8\x2a\x8d\x60\x0b\x2e\x41\x49\x84\x52\x48\xd2\xa5\x5e\x4a\x4a\xbb\x74\x8f\x99\xd2\x39\x34\xec\xb6\x93\x21\x7a\x90\x28\x9b\x3a\xab\x75\x96\xa1\x31\xee\xb0\xae\x51\xa2\xe6\x36\x71\xd9\x6c\x78\xee\x28\x76\xbc\x43\xf8\x9d\x34\x3d\xae\xdb\x49\xdf\x44\x5f\x60\xe3\x3c\x97\x35\xfa\x54\xb7\xac\xd7\x63\x4e\x37\x4c\xe0\xb0\xac\xd7\xb0\x52\xda\xe7\x0c\x98\x9a\x57\x44\xb2\x3b\x73\xf8\x79\xae\x9a\x7a\xb9\x15\x64\xc9\x3b\x91\x6b\xc8\x60\x0b\xec\xf6\xf0\x44\x34\xbf\x6a\xbf\xbc\xcd\xdd\x95\x69\x9a\x9f\x33\x81\x17\x5a\x3c\x73\x4e\x3b\x61\xb3\x82\x55\x5a\xfd\x87\xd9\xf8\xa4\x3c\xdb\xfd\xd5\x0e\x80\xa9\x99\x51\xc5\xe6\x9c\xb1\x54\x39\xf4\x25\xc7\xd4\x22\x71\xa4\x17\xee\xdc\xcd\xfb\x70\x58\x68\x8e\x14\xaa\xc0\x79\x1d\x7f\x80\x09\xa1\x00\x8f\x2a\x35\x1c\xaa\x41\x53\xd2\x62\xaa\x3b\x0b\xb1\xb0\x35\x6b\x71\xc2\xbc\xae\xe3\xd7\xda\xfb\x3a\x7d\x99\x75\x18\x65\x32\xcc\x58\xbd\xdc\x36\x96\xcd\x46\xf3\x57\x5d\x95\x8a\xe7\x54\x58\x3d\x78\xc6\x58\x63\xd7\x67\x91\xf3\x21\x53\xce\x7d\x93\x28\xde\x9e\xc2\x83\x59\x1d\x28\x84\x8e\x8a\x3f\x54\xa9\xf4\x13\x95\xd2\xe4\x0b\x12\x4a\xcb\x15\xab\x75\xfc\xf2\xf4\xb7\x87\x1f\x74\xfa\x06\x75\x64\x10\x2a\x95\x56\x79\x9d\x59\x26\xf2\xf8\xc5\xaf\x81\x6f\xd3\x29\xeb\xc8\xa0\x02\x8e\x9b\x4d\x4a\x62\xc1\xcd\x86\xb0\xdf\xc2\x54\x23\x25\x73\x74\x57\x67\x94\x96\x8d\xdf\x53\x6e\x1d\xfb\xe7\xb1\xd3\xd5\x67\x91\x4d\x41\xa6\xea\x44\x7c\xbf\x09\xb1\xc1\xdd\xa4\xc1\xa9\xed\xe1\xc6\xec\x94\x4e\x6c\xce\x00\x8c\xdc\xcc\x3d\x81\xac\x0e\xae\xce\xc4\xfb\xcf\x00\x0a\x7b\xcc\x06\x26\xfb\xea\xa7\x54\x3b\xfd\x44\xbc\x80\x39\x90\x4a\xa9\x5c\x66\x18\x0f\x8a\xeb\x00\x0a\x13\x6a\x03\x53\x1e\x37\x05\x32\xf1\xa0\x33\x6f\x8a\x1a\xf1\xa4\x73\x64\xd0\x31\xe7\x2a\x22\xcb\x94\x5c\x89\x78\x56\x4a\x0a\x4c\xcd\xe3\xa3\x04\xff\xb8\x9d\x0b\xed\x2a\xaa\xfb\xdc\x84\x7a\x57\x6a\xbb\x6f\x6f\xb7\x3e\x6f\xd9\x7d\x85\xdd\x57\x6d\xb4\xfa\x26\xbc\xfb\xee\xf7\xf6\x56\xd8\x7d\x7e\x9c\xc0\x4f\x8f\xd2\x89\x3f\x76\x71\xd0\xf4\xcf\x4d\x34\xc0\x4a\x94\x8e\x6b\x1f\x27\xd4\x24\xb7\x2a\xaf\xcb\xf8\xee\x7f\x0c\xa0\x60\x8a\x2d\x4c\x9e\x00\x8b\x6b\xa5\xf7\x89\x33\x10\x82\x83\x53\xd0\x12\x08\x85\x27\xd4\x26\xf5\x64\xfc\x67\x88\x05\xf6\x3b\x9c\x3a\x66\xf8\x84\x5a\xd8\xf8\x04\xe6\x03\x30\x3c\x64\x1d\x81\x3c\x63\x42\x25\x15\xee\x06\xe0\x20\xa9\xb7\x04\x2a\xa7\x0b\x5b\x22\xcb\xb8\x94\xca\xb2\x25\x32\xdc\x56\x09\xb9\x85\x63\x42\xc3\x74\xd7\xae\x80\x19\x26\xfc\x28\x7b\x34\x66\x89\x80\x1d\x89\xd6\x33\xf2\x01\xd5\x30\x5f\x6b\xe4\x16\x5f\xb7\x91\x7f\x17\x32\xc3\xc3\x17\x65\x53\xd5\xcd\x07\x71\xf3\xce\xdc\xb4\x04\xf1\xb2\xd6\xc4\xba\xa3\xb5\xd9\x20\x5d\xdb\x86\x54\x42\x7f\xa7\xf4\x26\x27\x7e\x84\x1b\xfb\x0d\xee\xf4\x27\xb8\xd8\x29\x42\x63\x85\x8c\x27\xc1\x45\x88\x45\x5a\x70\x87\x8f\xa7\xda\xc4\xab\xf6\x00\x1c\xf6\x36\x0d\x81\x0c\x65\xeb\x9c\x48\xbc\xee\x0e\xc0\x41\x28\xb7\x04\x42\xa1\xc0\xb2\x62\x1b\xdc\xb3\xa5\x90\xf1\x46\xe0\xb7\x9b\xbf\xde\xde\x7e\x7a\x77\xfb\xe9\xd7\x79\x52\xe9\x94\x33\x26\xb6\x55\xa9\x77\xb0\x8f\xca\xbf\x6b\xf9\xff\xba\x67\x45\x22\x91\x47\xc8\x63\xda\x96\x2f\x13\x6d\xe2\xd2\x99\x7a\x42\x58\xa2\xdd\x21\x4a\x77\x1d\xde\xc2\x4e\xe4\x6b\x24\xb6\x70\x64\xd8\x98\x37\xa6\xe2\x89\x1f\xf3\xe7\x0e\x99\xc1\x42\xad\xd7\x25\x82\xe6\xb9\x50\xb0\x54\xcf\xe9\x9d\x4e\xf0\xc7\x3c\x40\x69\x31\x1e\x7d\x37\x0e\x99\xc1\x75\x29\xb2\x0d\x2c\x6b\x6b\xc9\x1f\x30\x87\xdc\xd1\xb9\x17\x6a\x17\x15\xfe\xf2\x61\x06\xf3\x42\xed\x5e\x7f\x10\x39\x82\xe3\xc2\x4e\xc8\xfc\x94\x1d\xc8\xa7\x47\x8c\x4e\xff\x39\xd1\x9c\x7e\xb9\x9e\xc1\xcd\x33\xd1\x9e\x1e\x08\x8d\xc4\x05\xc0\xbf\x17\xdf\xff\x0f\x00\x00\xff\xff\x4b\xc9\x7c\x1e\x62\x22\x00\x00")

func resMessages_enJsonBytes() ([]byte, error) {
	return bindataRead(
		_resMessages_enJson,
		"res/messages_en.json",
	)
}

func resMessages_enJson() (*asset, error) {
	bytes, err := resMessages_enJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/messages_en.json", size: 8802, mode: os.FileMode(420), modTime: time.Unix(1566370432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resMessages_zhJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x59\x5b\x53\x1b\xc9\x15\x7e\xf7\xaf\xe8\xa2\x4a\xe5\xa4\x42\xe2\x77\x3d\xed\x2e\x66\xb3\x54\x6a\x5d\x2e\x83\xb3\x95\x0d\xd9\xa9\xd1\x4c\x23\x4d\x90\xa6\x55\xd3\x3d\x5c\xbc\xb5\x55\xb0\xe1\x22\x0c\x18\xca\xd8\x60\x03\xe6\xb2\x01\xc3\xe2\x05\xec\xd8\x31\x58\xe2\xf2\x67\xd4\x33\xa3\xa7\xfc\x85\x54\x4f\x4b\x44\x6a\x75\xf7\x68\xab\xf2\x62\xa3\x39\xdf\xf4\x77\xba\xfb\x9c\xef\x9c\xee\xf9\xfe\x16\x00\x5d\x79\xd3\xcd\xfa\x66\x16\x76\xa5\x41\xd7\xa3\x5c\x57\x37\x7b\x56\x80\x18\x9b\x59\x88\xbb\xd2\xe0\xaf\xb7\x00\x00\xe0\xfb\xf8\x5f\x00\xba\x1c\x9b\xe1\x2c\xdf\xf3\xa0\x4b\x8c\xa2\x07\x87\xa0\x07\x5d\x0b\xc6\xef\xc5\x88\xfa\xbb\x0c\xd6\xc3\x61\x40\x06\x23\x9e\xe9\xe2\xbc\x49\x1c\xe4\x32\x28\xbd\x5c\xa1\x73\x8b\xb5\xe9\xc5\xf0\xf2\xa4\x2b\xc6\xfc\xd0\x2d\x63\xc6\x30\x91\x15\x43\x02\xee\x27\x33\x46\x27\x57\xe1\xe5\x49\x0a\x57\xcf\xcb\x29\xac\xa3\xbc\x59\x20\x19\x59\xbb\x51\xa4\x39\x3d\x8e\x0e\x27\x74\xe3\x8f\x22\x6f\xf8\xae\xe3\x49\x87\xff\x06\x79\xc3\xa0\xc5\x28\xae\xdb\xd9\x7e\xf5\x72\x33\xdc\x38\xa1\x97\xcf\x75\x24\xd0\x95\x8e\xdf\xeb\x66\xf3\x0e\xce\xa9\xbd\x9f\x7f\x17\xac\xce\xea\x06\x7e\x94\x93\x6f\x7d\xce\x71\x21\x56\x2f\x4b\xf5\xfc\x38\x61\x60\xec\x17\x8b\xc8\x23\x86\x76\xf9\xe9\xd2\x51\xf0\xec\x34\x58\x98\xe4\xcb\x0c\xdd\xdf\xa4\xf0\x6f\xe9\xd3\x85\x47\x39\xf6\x87\x7a\xd5\xf4\xaf\x35\xbc\x92\xb9\xe5\x63\xa8\x77\xe9\x21\x86\xa0\x3e\x7b\x90\x18\x1d\xd5\xcb\xeb\xf0\xd9\x21\x5f\x8c\xe4\x48\xc1\xc4\xf4\x88\x01\xc7\xa0\xe5\xc7\x03\xc8\xe8\xfb\x19\x06\xf4\xb6\x63\xc4\x25\xb8\x98\xa0\x07\xf3\xc1\xdc\x41\xb4\xbb\xa0\x0f\x1c\x3b\x81\xb1\xd7\xb5\x3b\xe0\x0b\x2b\x2b\xc1\xab\xed\x64\x3e\x3e\x47\xcb\xc4\xf2\xd5\xe5\xd3\xeb\x31\x35\xa1\xc5\x67\xc6\x96\xf5\x6a\x1e\xa4\x30\xd0\x67\x37\x9b\x9f\x92\x8d\x4d\x4d\xcb\xc5\x67\xd5\xcc\xf5\x9f\x8b\x85\x68\x62\x2d\x58\xfb\x98\xb2\xc3\x83\xa7\xda\x50\xca\xc0\xac\xe3\x1a\xa6\x6b\xe6\xc7\x15\xfc\x0f\x7c\x17\x60\xcb\x73\x8a\x04\x27\x4c\x97\x96\x66\x82\xad\xe5\xe0\xdf\xf3\xd1\xe9\x73\xe6\xd4\xd6\xa6\x6e\xd2\x9e\xef\x1a\x6d\xe3\xfe\x4a\xde\xe8\x7a\x39\xda\x5d\x88\xa6\xd6\x83\xcd\x5f\x6e\xa7\xf0\xed\x6a\xf9\x49\x0a\x07\x2b\x8b\x4c\x8e\xde\x57\xc2\xca\xb6\xce\x01\xe2\x14\xa0\x31\xe4\xa1\x82\x41\x90\xd4\x83\x2f\x3d\x54\x00\x03\x48\x9d\x38\x95\x27\x29\x4c\x4b\x6f\x53\xb8\x1b\xc8\xd6\x5b\xc6\x89\x88\x99\x97\x92\x0d\xb4\x5a\xc4\x05\x5e\x2e\x45\x27\xbb\xba\x91\x8b\x26\x96\xaf\xe3\xfd\x16\x83\x30\x6e\x6d\x62\x3d\xba\xd6\x4a\xe0\x90\xe9\xc8\x1d\xfe\xb2\xc5\x20\xfa\xbb\xf7\x2e\xfa\xb0\xaf\xcd\xb1\x61\xa7\x28\xcf\xae\x16\x83\xb8\xe1\x67\xef\x9b\xfd\x95\x27\x2f\x54\x0c\xdc\x62\x10\x06\x0e\x8e\xf7\x6b\x47\x7b\x3a\x87\xad\x1c\xb4\x86\x8b\xc8\x71\x89\xa2\xd8\xb4\x9b\xc5\xc5\x3e\x5a\x88\x4e\x27\xc3\x1f\x3f\x69\xb5\x60\xac\x08\x2d\x62\x78\x10\xfb\x79\x39\x53\x6f\x8c\x00\x0f\x04\x84\x38\xa1\xcd\x6d\x7a\x35\x9d\x9c\x86\xa6\x45\x7c\x33\xaf\xe3\xfb\x3c\x46\x24\xf1\xd1\x93\xad\xda\xcb\x0e\xf8\x5c\x64\xfc\x6f\x25\xe5\x11\x7b\x0f\x01\x29\x44\x9c\xe1\xbf\x76\x83\xcd\xb9\xf6\x45\x55\x05\x85\x9c\xac\xbf\xd5\xf2\xab\xc3\x02\xb9\xf9\x71\xa3\xd1\x27\x70\xbd\xd2\xd7\x66\xf6\x02\xa8\xbf\x70\x53\x9c\x59\x81\x48\x6e\x14\x62\x9d\xe3\x25\x5a\x5f\x50\x62\x99\x31\x08\xc4\x9a\x2a\x16\x0b\x4e\x7e\x1c\xa4\x6c\xc0\x80\x80\x01\x35\x4e\xc4\x02\x94\xb2\xab\xe7\x47\x75\x81\x8f\xeb\x8d\xce\x09\x9f\x31\x19\x68\xc8\x30\xc9\x90\xa2\x4b\x61\x33\x47\x43\xa0\x05\x20\xed\x4e\xe8\xf9\x09\x7d\xfc\xb3\x56\x4f\xcc\x42\x31\x0f\x0d\x82\x0c\x5f\x55\xb6\x63\x04\x20\x08\xf8\x18\xa6\x41\x02\x63\xb8\x57\x4e\x98\x9f\x83\x8d\x04\x4d\x60\xb1\x05\xe2\x0a\x0b\x46\x1d\x92\x03\xb7\x3f\xbb\x0d\x72\x26\x06\xb2\xd7\x04\x27\x3e\x63\x25\x75\xef\x43\xb8\x3e\x55\x3d\x2f\xd3\xe5\x37\x37\x61\x1e\xae\x4f\x25\x07\xe5\x38\xf2\x3d\xc3\x42\x36\xc4\x46\x0e\x7a\xf2\xe5\xf8\xc6\x73\x08\x04\x0c\x09\x62\x24\x68\x45\xb6\x25\xc2\x1e\xdd\x9b\x0a\x2f\x56\xe9\xcc\x4b\x5e\x60\xb9\x17\xd5\xca\x3f\xc3\x9d\xc9\x8e\x05\x4d\xed\x4e\x8b\xaa\x69\x12\x72\x73\x3b\xd8\xdc\xe0\x32\xd3\x0d\xe8\xd2\x69\xb5\xb2\x1f\x6c\xce\xd1\xbd\xf5\x84\x9e\xae\x45\xe7\xd4\x6e\x3c\x80\x16\xf2\x6c\xc0\xd1\xc0\x4b\xf0\x26\xba\x5a\xa1\xb3\xe5\x9b\xbd\xe9\x54\x03\xb1\x6f\x59\x10\x63\x16\xac\x59\xe8\x42\xcf\x24\x8a\x53\x24\xc7\xb1\x90\x6d\xe0\x6e\xd2\xb5\xde\x1a\x01\xc7\x05\xac\xf3\x51\x2f\x58\x69\x99\x3e\xde\xa6\xa5\x0d\x5a\x29\x37\xa5\x2f\xd7\x92\x6e\xc0\x4f\x6d\x69\x3e\x46\x67\x2e\x7b\x30\xd6\xba\x8c\x9f\x4d\x72\x9a\x23\x81\x09\x32\x7e\x16\x0c\x21\x2f\xd6\x18\x90\xc2\xbf\xd7\xa8\x1d\xf7\xb7\x7a\x5e\xe6\x02\x13\x83\x83\xa5\xe5\x6a\x79\x2f\xbc\x28\xd7\x5e\x9e\x75\xe8\x24\xf6\x33\x05\x47\x5b\x46\x9b\xfc\xe4\x60\x40\x72\xb0\xb1\xe3\x4d\xde\xda\xdd\xf5\x87\x7d\x36\x70\x30\x48\xd9\x1d\xbb\x6e\xd7\xfd\xae\x07\x6b\x74\xfd\x8c\x6e\x6c\xf1\x5f\x2c\x91\x96\xce\x52\x76\xa7\xb3\x19\x75\x88\x95\x33\x8a\x1e\xfa\x3b\xb4\x92\xa7\x13\xa3\xd9\x5f\xf5\x17\x40\x0a\xa7\x75\x15\xa6\x11\x23\xb3\xc1\xe2\x4f\xb4\xf4\xb6\xb6\xfb\x29\xdc\x38\xe1\xc7\x88\xb3\x53\x7a\x35\xd5\x54\x6c\xa4\xd5\x86\xd5\x19\xec\x3b\x8a\x28\x1e\x60\xe1\xda\xdf\x6a\x16\x1d\x88\x63\x92\xee\xaf\x55\x2b\x1f\xb5\x75\x2d\x66\x8a\x23\x5f\x43\x25\xd8\xa5\x5c\x3c\xfe\xb5\xfd\x1e\x72\x09\x54\x35\x7b\xa2\x4d\xac\x96\x33\xd3\xf4\x44\xdb\xe6\x79\xbe\xfc\x20\xfb\xc0\x57\x1f\x5f\xf9\x69\x47\x3b\xaa\xa8\x57\x2d\xca\xa6\xd7\xb2\x64\xd9\xf2\x8b\x79\x64\xda\xba\x9c\x7a\x18\x23\x92\x5a\xc5\xea\xf9\xe3\xea\xc5\x4e\x07\x27\x44\xbd\xd0\x3c\xe0\xea\xf2\x45\xb3\x59\xdc\xeb\x0e\x85\x03\xc9\x6f\xbe\x90\xfa\xce\x2b\x28\xad\x6a\x6f\xa4\xa0\x4b\x4c\x64\xf8\x9e\xfc\xec\xf4\x6d\x6c\x7e\xe8\xa9\x0f\x50\xe1\xeb\xe9\xda\xe4\x0a\xdd\x7c\x4b\x5f\x69\xaf\x63\x8a\x1e\xb2\x7d\x8b\x18\x8e\x2d\x3f\xfc\x71\x73\x9f\x5a\xb4\xaa\xe5\x03\xba\x32\xd9\x77\x57\x9b\x76\x26\x1e\x56\x31\x0c\x98\x78\x58\x37\x7c\xa5\x42\x1f\xef\xea\x87\x77\x5c\x1b\x16\xa1\x6b\x43\x97\x18\xc9\xc7\x9f\x3e\x86\xfe\x43\x52\x8c\x85\xf3\xbf\x84\x6f\xe6\x9b\x0f\x41\xc1\xea\x6c\x82\xba\x98\x96\x85\x7c\x45\xc6\x7f\x2e\xda\xc4\xdc\xfc\xf0\x9a\x2e\x69\x63\x8c\x1d\xd0\x47\x91\xa7\xd8\xa7\x36\xa3\xa8\x28\xa7\x33\x09\x7d\x16\x2f\x62\xf2\x3e\x54\x30\x49\xb3\x44\xdf\x5c\x8f\xa8\x7a\xea\x11\xcd\xc5\xe2\xf5\x2b\x7a\xfc\x42\xab\xb1\xa6\x6b\x41\x79\x8a\xf4\x08\xa6\xb6\x43\xd1\x6a\xf0\xb1\xa4\xf5\x99\xd7\x4c\xc5\xdd\x4e\x3f\xaf\x91\x9a\xdb\x1d\x5e\x0e\xa3\xd9\xf7\x09\xa7\x59\xd7\x2c\xc8\xd7\xe6\x1e\x02\xf7\x5a\x6c\x62\x88\xfe\x5c\x4e\xc8\x6c\x56\xbb\x0d\x0b\xb9\x43\x8e\x5c\x01\x95\x43\xa7\xf0\xe0\xa0\x0b\x9a\xef\xe5\x59\xfd\x67\xcf\xb8\xae\xf0\x0a\xdf\x78\x46\x4f\x2f\xe8\xf4\x7e\xf8\xae\x42\xb7\xe6\x1b\xcf\x1a\xb2\xd0\xf8\xcd\x4f\x9d\x8d\x5f\x83\x5d\xe0\x77\x83\x2e\x63\x1e\x54\x66\x5a\x1a\xa4\xc8\x60\x97\x6e\x86\x05\x64\xfb\x79\xf9\xda\x7d\x2d\x98\xc4\x88\x3d\xdc\xa5\xaf\xd6\xf4\x91\x45\x60\x16\x79\xe3\x8a\xd8\x12\x8d\xe2\xd6\x24\x7e\xcb\x18\x81\x1e\x56\x5d\x46\xff\x59\xb4\x89\xa3\xcf\x95\x12\x7a\x0f\x0c\x47\xa0\xe7\x10\xb9\xf7\xfd\x6d\xc6\xb6\xfa\xba\x5f\x9b\x5d\x0c\xcb\x07\xb4\xf4\x46\x1f\x61\x0e\x52\xb2\xdc\x6f\x33\x8a\xb3\xf8\x70\x10\x4c\xec\x87\x87\xf3\xb4\xfc\x5a\x7f\xcd\x4a\xf2\xd0\xb0\x4c\xd7\x45\xc4\xc8\x40\x03\x16\x8a\x0a\xca\x01\x86\x04\x1c\x09\x32\x10\x08\x48\x31\x06\x76\x66\x6b\x3f\xbd\xa8\x9e\x2f\x46\xff\xb8\x64\x3d\xb7\x3e\x9b\xb8\x1a\x68\xa4\x20\x41\x07\x3a\x50\x1a\x5d\x77\xde\xe3\x41\x93\xc0\x3b\x75\xd5\xb9\x2f\x22\xdb\x28\xd9\x69\xed\x0e\x67\xe6\xb9\xaa\xad\x9f\x85\xb8\x4f\x8a\xaf\xb2\x79\xe3\x21\x2f\x9c\x31\x0c\x30\x18\xf8\x56\x80\xb5\xdf\x6c\xd7\x1b\x90\x58\x1a\x92\xbe\x1c\xda\x9a\x2f\x87\xff\x8f\x0f\x87\xac\xed\x77\x5c\xb9\x06\x0e\x88\x36\x69\xbb\xdf\x81\xd0\x2a\x6e\xcf\xdb\x8c\xe2\xa5\x6e\xe2\xf6\x60\x48\x98\x87\x8a\xeb\xc7\x36\xa3\xf4\x13\xb1\x6e\xfc\x1c\xcc\x17\x8d\x61\x38\x6e\x64\x1c\x57\xde\x5d\xfc\xa9\xf7\x2f\x5f\xf4\xdd\xbb\xdb\x77\xef\x8f\xfd\xea\xbd\xb8\x7e\x13\x2c\x9e\xd5\x9e\x25\x53\x15\x90\xea\x86\xed\x6b\x14\xdf\xac\xc5\xff\x35\xae\x38\x95\x84\x75\x30\xbf\xda\xac\x5d\xec\x04\x3b\xda\xef\x10\x31\x35\x31\x33\x8a\x26\x34\xc3\x68\x47\x20\xc8\x40\x32\x0a\xa1\xcb\xce\xef\x05\x30\xea\xd8\x59\xa8\xd9\xbb\xf8\xb5\x68\xf7\x90\x2e\x3e\x0f\x9e\x1c\x54\x2b\x1f\xe9\xe9\x45\x54\x3a\x4a\x74\x03\x17\x4d\xc5\x77\xff\x7e\x66\x49\x83\x01\x94\xcd\xe6\x21\xf0\x4c\xdb\x41\x20\x83\xc6\x94\x1e\xd4\xf1\xb5\x89\xb9\xea\xf9\xf1\x1d\xde\xd4\xd0\xc5\xe7\xb5\x89\xb9\x60\x77\x26\xd1\x0f\xe8\x12\x28\xcf\xbc\x5e\x66\x49\x83\x9e\xbc\x63\x0d\x83\x8c\x4f\x88\xa6\x1c\xd5\xb1\xe1\x8f\x9f\xe8\x6c\x25\x58\x98\xab\x3d\x4d\x8e\x01\x9c\x43\xa3\x52\xe2\xef\xbe\x4a\x83\xfe\x1c\x1a\xbd\xf3\x95\x63\x43\xc0\xb0\x60\xd4\x71\xed\x66\xb4\x40\xcf\xde\x08\x5e\x5c\x85\x7b\xe5\x3b\xb5\xf5\xe5\x68\x6d\x29\xf9\xae\x97\x4f\x7e\x4c\xd1\xed\x7e\xd7\x93\x06\xbd\x63\x9a\x7e\x97\x01\x6a\x13\x13\x74\xb6\x51\x31\x6e\x01\xf0\xb7\x5b\x3f\xfc\x37\x00\x00\xff\xff\xa4\x30\xa8\x5c\x8a\x22\x00\x00")

func resMessages_zhJsonBytes() ([]byte, error) {
	return bindataRead(
		_resMessages_zhJson,
		"res/messages_zh.json",
	)
}

func resMessages_zhJson() (*asset, error) {
	bytes, err := resMessages_zhJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/messages_zh.json", size: 8842, mode: os.FileMode(420), modTime: time.Unix(1566370437, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resResGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x9b\x5b\x6f\x23\xd9\x75\xfd\x9f\xc5\x4f\x41\x37\x60\x43\xfa\xa3\xa7\xbb\xee\x75\xaa\x81\x79\xf1\xe5\x0f\x38\x80\x6d\x20\x99\x3c\xa5\x02\xe3\x54\xd5\x39\xdd\x4c\x24\xb1\x43\x52\x4e\x75\x0f\xe6\xbb\x07\xbf\xbd\x57\x89\x1a\x8f\xc6\x03\x04\x79\xa0\x44\x16\xeb\x72\xce\xbe\xac\xbd\xf6\x85\xef\xdf\xef\x7f\x77\x5c\xd2\xfe\x63\x7a\x4c\xa7\x78\x49\xcb\x7e\xfa\xb2\xff\x78\xfc\x66\x3a\x3c\x2e\xf1\x12\xdf\xed\xde\xbf\xdf\x9f\x8f\x4f\xa7\x39\x9d\x3f\xf0\xfe\x94\xce\xef\x1f\xd2\xf9\x1c\x3f\xa6\xf3\x5f\xd3\xe3\xbb\xff\x38\x1f\x1f\x7f\x72\xfc\xeb\xa7\x1f\x1d\x3f\xa5\xf3\xbb\x8f\xc7\xed\x13\xdf\xbc\x9f\xe3\x39\x7d\x93\x4f\xc7\x87\x6f\x3e\x9f\x8e\xcb\x71\xbe\xfc\xe8\x02\x3b\xe5\xfc\x34\xcf\xe9\x7c\xfe\xe9\x17\x5f\xd3\xe3\x25\x1e\xbf\x39\xa7\xcb\xe5\xf0\xf8\xf1\xc7\x27\x5c\xd2\xc3\xe7\xfb\x78\x49\xef\xa7\x78\x79\x77\xf9\x7c\xff\x93\xe3\x1f\x8f\xaf\x1e\xbe\x7f\x8a\xaf\x1e\xff\x9c\x4e\xf7\xaf\x7f\xf1\xe9\xf3\xcf\x1e\xff\x12\x1f\x5e\xf9\xe2\xcb\xe5\xd3\xf1\xf1\xd5\x6b\x4e\x29\x2e\x0f\xe9\x9b\xf4\x0f\xbf\xfd\xfa\xe9\xf5\x6f\x9f\xa6\x2f\xaf\x7e\x71\xfe\x94\xee\x5f\x5f\xfa\x65\x7e\x3e\xfe\xfb\xbf\xec\xff\xfc\x97\xef\xf6\x7f\xf8\xfd\x1f\xbf\xfb\xd5\x6e\xf7\x39\xce\xff\x19\x3f\x26\xce\xde\xed\x0e\x0f\x9f\x8f\xa7\xcb\xfe\x76\x77\xf3\x66\xfa\x72\x49\xe7\x37\xbb\x9b\x37\xf3\xf1\xe1\xf3\x29\x9d\xcf\xef\x3f\x7e\x3d\x7c\xe6\x40\x7e\xb8\xf0\xef\x70\xf4\xbf\xef\x0f\xc7\xa7\xcb\xe1\x9e\x0f\x47\xbb\xe0\x73\xbc\x7c\x7a\x9f\x0f\xf7\x89\x37\x1c\x38\x5f\x4e\xe8\x8c\xb7\x97\xc3\x43\x7a\xb3\xbb\xdb\xed\xf2\xd3\xe3\xbc\x97\xbd\xfd\x73\x8a\xcb\x2d\x6f\xf6\xff\xf6\xef\x3c\xf6\xed\xfe\x31\x3e\xa4\xbd\x5f\x76\xb7\xbf\xdd\x8e\xa6\xd3\xe9\x78\xba\xdb\x7f\xbf\xbb\xf9\xf8\xd5\x3e\xed\x3f\x7c\xbb\x67\x55\xef\xfe\x9c\xfe\x9b\x9b\xa4\xd3\xad\x2d\x9b\xcf\xbf\x7d\xca\x39\x9d\xec\xb6\x77\x77\xbb\x9b\x43\xb6\x0b\x7e\xf5\xed\xfe\xf1\x70\xcf\x2d\x6e\x4e\xe9\xf2\x74\x7a\xe4\xe3\xdb\x7d\x7e\xb8\xbc\xfb\x03\x77\xcf\xb7\x6f\xb8\xd1\xfe\xd7\xff\xf5\x61\xff\xeb\xbf\xbd\xf1\x95\xd8\xb3\xee\x76\x37\x3f\xec\x76\x37\x7f\x8b\xa7\xfd\xf4\x94\xf7\xfe\x1c\x7f\xc8\xee\xe6\xaf\xbe\x9c\x6f\xf7\x87\xe3\xbb\xdf\x1d\x3f\x7f\xb9\xfd\xcd\xf4\x94\xdf\xee\x3f\x7e\xbd\xdb\xdd\xcc\xf7\x7f\xd8\x56\xfa\xee\x77\xf7\xc7\x73\xba\xbd\xdb\xfd\x5f\xad\x87\xdb\xf8\xfd\x7f\xe6\x46\xe9\x74\xf2\x75\xeb\xe0\xf4\x94\xdf\xfd\x96\xa5\xdf\xde\xbd\xe5\x8c\xdd\x0f\xbb\xdd\xe5\xcb\xe7\xb4\x8f\xe7\x73\xba\x20\xf2\xa7\xf9\xc2\x5d\x6c\x7f\xd2\xc7\xee\xe6\xf0\x98\x8f\xfb\xfd\xf1\xfc\xee\xff\x1f\xee\xd3\x1f\x1f\xf3\xf1\xf9\x3a\xa9\x70\x3b\xfe\xe2\x0e\xa6\xc3\xfd\x5e\x6a\xdc\xdd\x9c\x0f\x5f\xed\xf3\xe1\xf1\xd2\x35\xbb\x9b\x07\x00\x68\xff\x7c\xd3\x3f\x1d\x97\x64\x07\xbf\x3b\x3c\xa4\x3d\x66\xf2\x8e\x77\x3c\xc7\x4c\xe5\x36\x1f\xfe\xfe\x59\x77\xfb\x3f\xc7\x87\x74\x7b\xa7\x27\xf0\x4c\xed\x32\x1f\xde\xf1\xf4\xdd\x0f\xff\xe0\xda\x7f\x39\x7c\xe5\x5a\x5b\xcd\x8f\x2f\x65\xa1\xff\xf0\x52\xd6\x7a\x7b\xf7\x72\xe5\x3f\xbe\x01\x5b\xfb\xa5\x1b\xb0\xb9\xdb\xbb\xeb\x46\x7f\x72\x07\xed\xfe\xe7\x6f\xf2\xc7\xf3\xef\x0f\xa7\xdb\xbb\xfd\x74\x3c\xde\xbf\xbc\x3a\xde\x9f\x7f\x61\xe7\x5f\xce\xbe\xf1\x74\xca\x71\x4e\xdf\xff\xf0\xe2\x6a\x99\x04\x56\xfe\xd7\x53\x3a\xff\xe9\x0a\xfa\xff\x74\x3e\x3e\xee\xbf\x95\x45\xdc\xbe\x19\xd7\x32\x8f\x6b\x98\xc6\xb5\x08\xe3\x5a\x14\xaf\xbf\x72\x1e\xd7\xa1\x19\xd7\x76\x18\xd7\x76\x19\xd7\x2e\x8f\xeb\x32\x8d\x6b\xdd\x8d\x6b\xd9\x8c\x6b\xbf\x8c\xeb\x9c\xc7\x35\xe6\x71\x9d\xc2\xb8\xd6\xc5\xb8\x76\xbc\x9a\x71\x9d\xeb\x71\x5d\xaa\x71\xcd\xed\xb8\x2e\xcb\xb8\x36\x79\x5c\xbb\x69\x5c\x97\x7a\x5c\xfb\x66\x5c\x8b\x65\x5c\xa7\x6e\x5c\xfb\x6e\x5c\x9b\x72\x5c\xd3\x3c\xae\x71\x1e\xd7\x25\x8c\xeb\xd0\x8d\xeb\xd0\x8e\x6b\x2c\xc6\x35\xb6\x7e\x1d\x6b\x9d\xea\x71\x6d\xe6\x71\x2d\xe2\xb8\x56\xcd\xb8\x96\xed\xb8\xce\xfd\xb8\x56\xcb\xb8\xe6\x38\xae\x4b\x1e\xd7\xa2\x1f\xd7\xb6\x1a\xd7\xa1\x1a\xd7\x6e\x19\xd7\x96\x7b\x37\x7e\xbf\xac\x35\xcd\xdd\xb8\xd6\x69\x5c\x43\x3f\xae\x99\xf3\xe7\x71\xed\xd3\xb8\x2e\xdc\x3b\xfb\x39\xdc\xab\x4a\x2e\x87\xaa\x1b\xd7\xaa\x1d\xd7\xa1\x1f\xd7\x34\x8d\xeb\x10\x7d\xcf\x7d\x39\xae\x75\x35\xae\xa1\x1e\xd7\x62\x18\xd7\x39\x8e\x6b\xdb\xfb\x3d\x78\xd6\x3c\xe8\xb9\xd3\xb8\xf6\xd1\xf7\xc0\xb3\x73\x31\xae\x75\xeb\xf7\xe1\x9c\x62\x1e\xd7\x9c\xc6\x75\x1a\x5e\xc8\x3e\x8c\x6b\xea\x5c\x07\x05\xe7\x86\x71\x0d\xc1\xd7\xc8\x9e\x90\x45\x1b\x5d\x36\xe8\x08\x99\xb5\xed\xb8\x96\x5a\x43\x0c\x7e\x5e\xd7\x8d\x6b\x0a\x2e\xa7\x7e\x18\xd7\x86\xbd\x4f\xe3\x9a\xbb\x71\x0d\xe8\x81\xcf\xa5\xaf\x65\x69\x5d\x16\xbc\x47\x7e\xed\x34\xae\xb1\x74\x7d\x86\x6a\x5c\x13\xc7\x07\x97\x0d\xfb\xef\x2a\x97\x3b\xf7\x68\xfa\x71\x9d\x5a\xd7\x2b\xeb\xc2\x1e\x4a\xf4\xcd\x73\xdb\x71\x9d\x9a\x71\x8d\xec\xaf\x1c\xd7\x38\xc9\x4e\xd0\x23\x6b\xc3\x46\x78\x5f\xf8\xda\x2a\xf6\xd8\xb9\xae\x53\x1e\xd7\xb9\xf4\xef\xd8\xfb\x1c\xfc\x7e\xd5\x20\x5b\x28\xc7\xb5\xa9\x7d\x2d\xd8\x0b\xfb\x47\x57\x7d\xef\xeb\x65\x6f\xec\x1b\x9b\x40\x07\x6d\x33\xae\x5d\xf2\xfb\x95\xa5\xcb\x08\x9b\xe3\x7e\xd3\xe2\xe7\x56\xbd\xdb\x28\xe7\xa6\xc2\x65\x8d\x4d\xb0\x1f\x64\x19\x4a\x7f\xcd\x85\xff\x6f\x8a\x71\x9d\x17\x5f\x4b\xc7\x5e\xf0\x8d\x30\xae\x13\xfe\x95\xc6\xb5\x19\xdc\x6f\x4a\xfc\x20\xb9\x6e\x4d\xdf\xad\xeb\xd4\xe4\x95\xdc\xde\xd0\x49\x83\x3e\xd1\x6f\x72\xbd\x72\x8f\xd8\xfb\x7f\xce\xc5\x17\xd1\x75\x13\x5d\x47\xec\xcb\xec\xb2\x75\xd9\x61\xd3\x01\x1b\xaa\xdc\xc6\x91\x7b\x1e\x7c\xbf\xe8\x65\x46\xae\xa5\xdb\x0e\xff\xb1\x31\xfc\x0f\xdb\xe4\x3a\xfc\x78\xd6\xbe\xb1\xcd\x0a\xbb\x9d\xdc\xfe\x3b\xe9\x6a\xd0\x67\xb0\x01\x1b\x29\x3b\x3f\xde\x86\x71\x8d\xc9\x7d\x12\x0c\xe8\x7a\x7f\x1e\xba\x06\x3f\xea\x59\x76\x5d\xbb\x3e\xf1\x21\x64\x8c\x9d\xa2\x5b\xfc\x68\x92\x8f\xa3\x8b\xb9\xf1\x3d\xf3\x0c\xee\x83\x9d\x21\x1f\xee\x85\x5d\xe2\xb7\xa1\xf3\xf7\x43\x1e\xd7\xa6\x75\xbf\x0f\xc9\x3f\xdb\xf3\xb1\x25\x74\x3b\xbb\xbc\xb0\x11\xec\x12\x1b\xae\x07\x5f\x43\x51\xf9\x35\xe0\x1a\xfb\x2a\x1a\xd9\xf0\xe2\xfa\xe3\xfb\x4e\xcf\xe2\x33\xd7\xa5\xde\xb1\x10\xdb\x59\x3a\x97\xaf\xe9\xa8\x72\x1f\xc4\xc6\xab\xe8\xfe\x59\xcb\x5e\xfb\xda\xf1\x02\x3f\xaa\xd0\x87\x6c\x2d\x0c\xae\x0f\x8e\x95\x83\xaf\x01\x39\x20\x23\xec\x11\x0c\x4b\xc2\x50\x64\x04\x26\x81\xa5\xb1\x1a\xd7\xa9\xf2\xcf\x69\x70\x5f\x61\x8f\xb6\xef\x76\x5c\x13\xbe\x17\xb5\xbe\xc2\xf5\x53\x37\xae\x2f\xfe\xe3\xeb\x7c\x8f\x7f\x62\xb7\x3c\xd3\xfc\x6b\x19\xd7\x65\x70\x3b\x00\x2b\x8a\xc9\xed\x15\x1c\xaf\x83\xfb\x0f\x18\x0c\x66\xe3\x27\xec\x27\xd6\x2e\x1f\x6c\x05\x9b\x33\x3c\x6b\xdc\x1f\x89\x01\x60\x4a\x9e\xdd\x27\xa3\x70\x77\x2a\xdc\x77\xc1\xc6\x6e\x76\xbc\x07\x87\x0c\xcf\x06\xc7\x78\x62\x08\x76\x8a\x7f\x82\x0b\xec\xcf\xec\x8c\x57\xe3\xbe\x03\xbe\xe1\x6f\x26\xe3\x2c\x4c\x1f\xdc\x5f\xd9\x0b\xb1\x8a\xef\xb8\xce\xe2\x59\x72\x2c\xe4\xfe\x65\xef\xdf\xb3\x9f\xa5\x70\x19\xb7\xf8\x00\x98\x51\xb8\x1c\x37\xfb\x01\xb7\xd1\x03\x3e\xd7\x28\xde\x21\x5b\x74\x8a\xef\xb2\xf6\xe7\x7b\x96\x8a\x99\xf9\xea\x93\xdc\x8f\xe3\x25\xb6\x1c\xdc\x5e\xf1\x1b\xd6\x82\x1c\x33\xdf\x05\xf7\x67\xc3\x93\xd2\xed\x03\xfb\x19\x0a\xc7\x0f\x93\xb7\xe2\x2d\xb8\x52\xd4\xc2\xe0\xd2\xe5\xc8\xf3\x87\xc5\x75\x8c\x7c\x83\xe2\x15\x3e\x8e\x7e\x43\x76\x1f\xe2\xb3\xc5\xc9\xc9\xfd\xb9\x54\x9c\xc1\x7f\x2a\xe1\x28\xf2\x65\xef\x16\x63\x64\x9f\xf8\x30\xb2\xc7\x0e\x88\xb7\xf8\x2a\xd8\x83\x0f\x0f\x49\x78\x31\x3b\x16\x19\xc6\xd4\x1e\x27\x07\xc5\x2b\xae\x67\xcd\x29\xf9\x7f\xf6\xce\x73\x4d\x36\xd1\xaf\x6b\x2a\xdf\x2f\x76\x0c\x4f\x48\x8a\xc1\xbc\xc0\x4f\x8b\xe1\xb5\xff\xc7\xc6\xf2\x74\xbd\xae\x95\xdf\xc1\x2d\xb0\x03\xd6\xc2\x35\xe8\x1c\x3d\xe3\x9f\xa5\xb8\x05\xd7\x22\x03\x64\x1d\x96\x71\xad\xa3\xef\x1f\x0c\x33\x0c\xac\xfc\x3d\xb1\xa5\x16\x96\x5a\x0c\x98\xe5\x57\xc9\x7d\x1e\x59\x60\x07\x86\xab\x83\x30\x72\x70\xbf\x45\xef\x53\xe9\xb6\x8f\x4d\xb1\xa6\xaa\x72\x5d\xe2\xe7\xe8\xc9\xb0\x6b\x72\x0e\x81\x9d\xf3\x1e\x0c\x81\xa7\x74\xb5\xc7\x45\xfc\x64\x11\x8f\xe0\x79\xe8\x03\x1d\xb2\x5e\xc3\x77\x3d\xb3\x55\xdc\x03\xaf\xb8\x07\xd8\xc2\x3a\x59\x1f\x71\x8a\x78\x19\x17\xdf\x13\x78\x8a\xbd\xe5\xc6\x31\x00\xac\xc1\x0f\x90\x1f\x7a\xe2\xbe\xc8\xdf\x70\xac\x74\xdf\x31\x5c\x51\x2c\xb5\xf8\xd1\x79\x9c\x18\x24\x1f\xe3\x6b\xb5\xeb\xa7\x91\x8d\xe0\xdb\xc8\xb3\xaa\xdd\xf6\x42\xeb\xb6\xcd\xe7\xa5\x74\x7b\x07\xcb\xe0\xa5\xf8\x19\xfb\x08\xb2\x63\x6c\xb8\x10\x37\x21\x6e\xf6\x95\x63\x20\xc7\xd0\x09\xba\x24\x36\x97\xc2\x66\x7c\xcb\x9e\x23\x5e\x06\xd6\xb3\xc6\x28\x1c\x34\x7e\x51\xbb\x4f\x19\x5f\xea\x5c\x16\xe0\x3f\x7e\x42\x1c\xea\xc4\x2b\x39\x17\xee\x83\x0e\xec\x7f\x2f\xdb\xcc\x8e\xd3\xd8\x18\xf6\xdd\x4a\x0e\x86\x79\xe2\x10\x69\x71\xff\xae\xb2\x9f\x8f\x2f\xc1\x97\x5b\x7d\xe6\x5a\xf6\xf0\x8c\xf7\x85\xcb\xc6\xf8\x48\x74\x7b\x04\x5f\xc0\x5e\xb8\x01\xfe\xcd\xfe\xc0\x19\x6c\x18\xd9\xc2\x4b\xb0\x63\xc3\xb3\xe8\x2f\x70\xd0\x62\x4a\x16\x5f\xab\x7c\xaf\xb5\x7c\x1e\x7d\xc2\x2f\xf0\x65\xfc\x0d\x3f\xab\x64\x4f\xd8\x3f\xfc\xac\x17\x06\x13\x77\xb1\x25\x7c\x95\xf5\xe1\x0b\xec\x15\x5d\xe1\x93\xc4\x3f\xf0\x8c\x58\x81\x8e\xe1\x3d\x9c\xcb\xfd\xd8\x1f\x78\x83\x1e\xf0\x3f\x74\xc9\x1a\x6a\xf9\x17\xd8\xd5\x88\x4f\xb2\x6f\xe4\xc2\x7e\x0d\x2f\x64\x4f\xe0\x6d\x96\xad\x11\x2b\x2d\x47\xe8\x5d\x1f\xf8\x0f\xfa\x37\x9e\x58\x68\x7d\xfa\x9e\xf7\xad\xfc\x85\x38\x6d\xf6\x19\x1c\x83\x5a\x71\x08\x7c\x1b\xbf\xea\xb5\x3e\xe2\x05\xeb\xe2\x1c\xe4\x32\x29\xfe\x58\x3e\x33\xf8\xb9\x83\x78\x93\xd9\x88\x74\x83\x4c\xb3\x78\x3d\xf7\x65\x8f\x53\x76\xce\xc3\x7f\x64\x80\xdf\x59\x0c\x6c\x1d\x1f\x8c\x63\x67\xf7\x11\x38\x24\xf1\xa2\x95\xcf\xf5\xdb\xde\x26\xf7\x91\x49\xb6\x07\xe7\xe3\x9c\xbc\x38\xaf\x43\xe6\x59\x31\x90\xeb\x90\x27\xdf\x11\x83\xc0\x24\x70\x07\x7f\x34\x4c\x28\xe5\xb7\xe8\x7e\x76\x3c\x6a\x15\x57\xb2\x62\x34\x31\x14\x0e\x00\x36\xa1\x53\xee\xcb\xba\x92\x72\x23\xf6\x60\xb9\x8c\x78\x44\x17\xae\x9c\x09\xdf\xc2\xbf\x91\x21\x9c\x89\x18\xcc\xf3\x0b\xf1\x43\x72\x1a\xec\xd1\x70\xa5\x75\x1f\xe5\x1a\x6c\xba\x15\xbf\x36\x0e\x1f\x7d\xdf\xc6\x37\x4a\xd7\x63\xad\x1c\x90\x35\x81\x9f\xc8\x13\x3d\x61\x27\xe8\x1a\x1d\x67\xd9\x2e\xf8\xce\x7e\xb1\x5f\x70\x0d\xbe\x4a\xec\x99\x15\xfb\xc1\x56\xf6\x82\xdd\x0e\x1b\x1e\x8a\x8f\x62\x17\xad\x74\x14\x64\x37\xc8\xc8\x38\xd3\xe2\xb6\x4d\xbc\xb1\xbd\xeb\xd9\xe0\x01\x36\x91\xe5\x4f\xec\x65\x56\x9c\x31\x1f\x0b\x8e\xbd\xc4\xc5\x59\xb9\x62\x2b\x19\xf1\x1d\xbe\x8c\x0c\x79\x5e\x9d\xfd\x79\x51\x3a\x29\x6b\x5f\x0b\xb2\x21\x8e\x20\x93\xb2\x72\x1f\x9f\x15\xaf\x37\x5f\x25\xb6\xc0\xf7\xb3\xfc\x04\xfb\x30\x2c\x6d\xae\x39\x5a\x2f\x5b\x2e\x37\x5e\xda\x3a\xf6\xa1\x33\x7c\xb3\x15\xaf\xb4\xfb\x28\x2f\x03\x0f\xc3\xc6\x63\x6a\xe7\xba\x49\xf6\x0f\x66\x6e\xbc\x19\xec\x80\x27\xb0\x36\xf4\x08\x0f\x45\xb6\x41\x1c\x04\x1f\xb7\xd8\xd7\x38\x36\x5b\x8e\xa6\x5a\x40\xbb\xc9\x51\x79\x2c\xb8\xc7\xf9\xc8\x92\x18\x56\xca\xee\xd0\x07\x36\xc1\x3a\xb0\xf1\x4d\xf6\xf6\x5c\xec\xb5\xf3\xb8\x84\x0f\x12\x43\xf0\x3d\xcb\x27\x4a\x5f\x0f\xfe\x67\x18\x5c\x2a\x8e\x2f\x1e\xbf\xd0\xa9\x71\xa1\xc6\xfd\xce\x62\x95\x72\xff\x20\x0e\x8e\xfd\x60\x03\xc8\x02\x8c\xb1\x9c\x2c\xf9\x79\xb3\xf8\x07\xd8\x6e\xf9\x3b\x76\x28\x0e\x84\xdc\x4d\xa6\x93\xaf\x2d\xca\xa6\x6a\xf9\x6a\x23\xce\x6d\x79\xd7\xc6\xf1\xa2\xaf\x8f\x78\x07\xa7\xc2\x8e\x8b\x2c\x9b\x9c\xae\xcf\xc0\x3e\xc0\x18\x38\x14\xb2\x2a\x85\x87\x85\x6c\x1e\x2e\x69\xbc\xa5\x76\xfd\x71\x3d\xf1\x2e\xcb\xb7\x91\x7f\x27\xce\x6b\x18\xdf\x8b\xf7\x55\xca\xf7\x1a\x5f\x03\xfc\x01\xdb\xb7\x9c\x3c\xfa\xb3\x1b\xe1\x01\x3e\x08\xef\x37\x0e\xa6\x3a\x10\xb6\x64\xb8\x28\x1e\x19\xe5\x9f\xc8\x11\x7b\xef\x85\xc1\x9d\x62\x95\xe5\x72\xd9\xed\xd6\xf8\x4e\x76\x6c\xc3\x87\x82\x72\x07\x3b\x7f\x71\x8e\x82\x3d\x57\x8a\x2d\x26\xd7\xe4\xfc\x1a\x0c\x66\x8d\xc4\x4f\xae\x25\x37\x1c\xc4\x3b\xc8\x5b\x82\x6a\x3b\xec\xa7\x56\xfc\xb5\xd8\x55\xb8\xdf\xa0\xbf\x46\x31\x6a\x96\x1e\x06\xf9\x27\xf8\x83\x3f\x55\x1b\x46\xca\xcf\x2a\x71\x6b\xe4\x95\x15\xfb\xc0\x3e\xe2\x4d\x54\x7e\x80\xdc\x2b\xe5\x1f\xc3\x66\x57\x93\xdf\x93\xd8\x9d\xc5\xd1\xd0\x13\xbe\x19\x36\x9c\xa8\x7d\x6d\xf8\x7c\x11\x5c\x16\xcf\xcf\xef\x3c\x2f\x42\x7f\xf8\x3e\xbe\x10\x82\xeb\x3e\xab\xc6\xc3\xde\x8d\xcf\x76\xbe\xb6\xa0\x5c\x1a\xf9\xf0\x19\x9d\x11\x0f\xb0\x1f\x72\x09\x62\x88\xe1\x83\xec\xdc\x3e\xd7\xce\x77\x2a\xe5\x35\xc6\xd9\x3b\x8f\xb7\x95\xe2\xcb\xa4\x7c\xb9\x92\x7d\xa3\x7b\x72\xb4\xcd\x8e\xcc\x26\x1a\x71\x5b\xdd\x0b\xfb\x5c\x54\xe7\x29\x94\x2b\x1a\x27\xd4\xf3\x66\x61\x83\xe5\xe9\x8a\x65\xe5\x86\x4f\xb3\xf8\xc5\xe4\xba\x62\x7f\xc8\xcf\xce\x59\xc4\x77\x95\x1f\x64\x71\x7b\xf0\x82\x3d\xb6\xca\xa1\x93\x72\xe0\x56\x76\x07\x8e\xa0\x37\xe2\x5d\xad\xe7\xf3\x2a\x55\xf3\x68\x85\x39\x56\xe7\x51\x6e\x97\x85\xf5\xec\x03\xbb\x2c\x94\xbf\xb1\x47\xe3\xda\x8d\xe7\x08\xf8\x07\xb9\x33\x36\x8d\xcc\x88\x31\xc4\xea\xa0\x9c\x8f\xfd\xf2\x6c\x64\x97\xa5\x5b\xab\x41\xa9\x1e\x04\xb7\xc5\xce\x8b\x45\xb6\x2e\x9e\x8e\x5c\xb7\xda\x55\xb3\x71\xd4\xd6\x31\x8b\xef\xc1\xb9\x46\x35\xa6\x46\xdc\x81\xd8\x4d\x6c\x08\x7a\x1e\xb1\x93\x75\x46\xd5\x04\xb1\xcd\x52\x7c\x86\x18\x59\xc8\x16\xb0\x67\xe4\x90\x64\x57\x70\x4f\xfc\x2f\x29\xff\x31\x7f\x29\x5d\x2f\x9b\x3d\xb0\xa6\x58\x5e\xf3\xa8\x4e\x35\x34\x93\x57\xed\xb6\x0f\xde\x21\xb3\x46\x36\x65\xba\x98\x1c\xbb\x2d\x67\x49\x2e\x07\x30\xa3\xef\xe5\xef\xe2\xf4\x5b\x5d\x8f\xcf\x56\x63\xa9\x85\x0b\xaa\x85\x62\x9b\xbd\xb8\x20\xfb\x9d\xc5\xc7\xd0\x3f\x79\x8d\xe1\x55\x14\xa7\x6f\xdd\x5e\x2d\x9e\xf4\xe2\x77\xb5\xf2\xb8\xce\x39\xbc\xe1\x2d\x3a\xa8\x1c\x47\x8c\x67\x44\xe5\x9c\xc1\x39\x31\x58\x05\x0f\x68\xb4\x5e\xec\x71\x51\xec\x27\xb6\x60\x77\x56\xe7\x69\x54\xff\x56\xbd\xdc\xea\xde\x41\x39\x66\xe7\xcf\xc0\x8e\x4b\xd5\x92\x93\xea\x7f\x83\x6a\x3c\x26\xdb\xc5\xe5\x80\x3f\x05\xf1\x71\xfc\xa8\x15\x17\x6e\x85\x69\x49\xf1\xdd\x6a\x8f\x85\xf3\x3c\x7c\xdb\xea\x17\x83\x63\x7f\x29\xce\x52\xff\xdd\x73\xb6\x5a\x2b\xfa\x2b\x96\x6b\x4e\x6f\x1c\x58\xeb\xab\x65\x53\xe8\x95\x5c\xce\x78\xb3\xf0\x9d\xff\x56\xc3\x49\xee\x8b\xf0\xd9\x42\x7c\x8b\x3d\x10\x23\x5a\x61\x66\xa9\x18\x68\x7b\xa9\xaf\x32\x43\x17\x59\xf1\x19\x79\x1a\xf7\xe8\x5d\x4f\xd8\xba\xed\x4b\xb5\x3c\x9e\x3f\xa8\x9e\xcf\x3a\x8c\x77\x89\x8b\xd4\xca\x35\x39\xc6\x7e\x0d\x53\x17\xb7\x7f\x70\xd3\xec\x54\x18\x60\x35\x9b\xec\x71\xf7\x65\x3f\x24\x6f\x79\xfa\xe0\x1c\x83\xfb\x60\xd7\xd8\x8e\x9f\xf7\x66\xeb\x8f\xfe\xb4\x03\xa3\xde\xdd\x6b\x3d\xd1\xad\xc3\xf7\xa2\xa7\xba\xbb\xb9\x79\xa5\x8b\xf3\x76\x77\x73\xf3\xe6\xb5\x96\xfe\x9b\xb7\xbb\x9b\xbb\xe7\x8e\xdb\x4f\x2f\xe4\xb9\xff\xcf\x1a\x85\x2f\x9f\x6b\x9d\xc2\xe7\x76\xec\xcf\x2e\xf9\x97\x5a\x9e\xcf\x9d\x4a\xeb\x35\x7e\xf8\xf6\xef\xfb\x56\xdf\x3f\xc6\x87\xf4\x61\xff\x33\x0b\xdf\x9f\x0f\x5f\xd3\x87\x7d\x08\x45\xf5\x76\xff\x70\x5c\xd2\x87\x97\xed\xb9\xdb\xa6\x2a\xee\xec\xf8\x77\x07\x6e\x62\x5d\xb7\x7f\x7d\x3c\xac\xb7\x65\xdb\x75\x75\x5f\x34\x75\xf5\x76\x5f\xdc\xfd\xb0\xbb\x89\x3c\xfa\x37\xb6\xc9\xef\x6d\x67\x1f\xf6\xda\x20\xeb\xfa\x60\x7f\x7f\x78\x16\x76\x7c\xfb\xb3\x1d\xb3\xaf\x9f\xfe\xd7\x1d\x33\xab\x88\x0e\xaa\x52\xd6\x8e\x78\xb3\x32\xc9\x5e\x4c\xc5\xaa\x71\x42\x0c\x90\x22\x6d\x95\xb6\xca\x3d\x1f\xe4\x80\x6d\x1a\x83\x4a\x1e\xe1\xac\xe3\xd3\xb8\x57\xb5\x3a\x0e\x4b\x98\x94\x25\x14\xaa\xd8\x46\x79\x41\xb3\x55\x41\x16\x47\xd9\x28\x54\x84\x3d\x73\xef\x56\xd5\x40\x22\x13\xc7\x41\x0c\xd8\xb0\x59\xf2\xec\xac\x73\x16\x5b\xb0\x4c\xb7\x16\xc2\x28\xa2\x12\x1d\x59\x2b\x9e\x93\xd4\xb9\x03\x49\x40\x42\x8e\x67\x55\x4b\x16\x21\x33\x51\xd0\x22\xdc\xec\x51\xca\x22\x9f\xbc\xa9\xd1\xbe\x7a\xb1\x21\x32\x4b\x8b\x48\x5b\x56\xa8\x6a\x8d\x79\x65\x23\x54\x17\xab\x1c\xd4\x25\x1a\x14\x8d\x0c\xd9\x93\x47\xf7\x42\xd1\x96\x48\xc1\xbe\x67\x75\x0a\x8d\x55\xab\xfb\x48\x14\x22\x72\x19\xd3\xa8\x5d\x2e\x56\x79\xeb\x9d\x61\xb4\xea\x8a\x94\xaa\x90\xa0\xdb\xa0\xee\x8e\x65\x66\x85\x3a\xa0\xfd\xd5\x0e\x38\x96\xc5\x08\x5b\x21\x08\xeb\x25\xb2\x0e\xea\xba\x80\xa4\x8b\xd0\xdd\x2a\x71\x93\xa3\x19\x36\x51\x28\x83\xb3\x0c\x4b\x59\x69\xa1\xee\xa1\x75\xc4\x14\xd5\xb3\x18\x34\xfa\x32\xc6\x51\x3b\xc2\x82\xec\x96\x79\xd4\x8e\x76\x44\x80\xa4\xcc\x79\xab\x90\x11\x89\x60\x3a\x95\xb2\x62\xf6\x4d\xb4\xb6\x0e\x85\xaa\xfd\x49\xd5\xbe\xac\x6e\x12\x36\x5a\x6d\x5d\xcc\xd9\xd9\x29\xcc\xb6\x53\x25\x96\x48\x40\x04\xc5\xd6\xad\xfa\x56\xa9\x1a\xd4\xab\x1a\x28\x66\x83\x7c\x91\x01\x76\x6f\xdd\x15\x65\x04\xb3\x98\x34\x11\x07\x3f\x32\xe6\x24\x7f\xaa\xc4\x00\x79\xcf\x9e\x5b\x65\x31\x56\xd9\x52\xc7\xa7\x48\xd7\xee\x1d\x11\xc4\x2a\x0e\x95\x67\x14\x39\x5c\xab\x06\x56\x45\xeb\x85\xf0\xca\x80\x67\xe9\x81\xfd\x56\xe1\x5a\xa1\xb2\x4c\x24\x39\xdb\xee\x2b\x45\x91\xd9\x2b\xb0\xc8\x6b\xd0\xba\x2d\x52\x2a\x9b\xb2\x0a\x42\x72\xfd\xc2\x98\x3a\x45\xbc\x42\x19\x63\x54\xb7\xd1\xaa\x80\x8a\x38\x51\x59\x67\xda\xb2\xf5\xa4\x8c\x58\xd9\x9b\x75\xdb\x93\x33\x4f\xab\x34\x88\x95\x60\x37\x59\x15\x00\xd6\x84\xfe\xad\x8a\x36\xfb\x7d\x83\xb2\xf5\x4a\xdd\x19\x6c\x1e\x1f\x49\xaa\x0c\x5a\xe5\x52\xe7\xd7\xaa\x76\xc0\x44\xb0\x8f\x79\xb3\x2d\x65\xe4\xc8\x9b\x73\x3b\xb1\x8a\x45\x8c\x93\x48\x6c\x95\xa4\xce\xe5\xda\xab\x9b\x8c\xaf\x5a\x97\xad\x75\x3d\x0e\x95\x47\xe5\x24\xa6\x1f\x83\x3a\xb5\xea\x86\x05\x55\x62\xc9\x02\xf1\xbd\x41\x7e\x57\xaa\xaa\xc5\x7a\x90\x27\x6b\x58\x74\x0d\xfe\x15\x64\xcf\xb0\x52\x8b\xf6\x8d\x3f\xdb\x32\xa2\xd2\x19\x0f\xf7\x4d\xaa\x72\x81\x65\xc8\x04\x0c\xc6\x4f\xb1\x2b\x63\x25\x62\x65\x66\xcf\xaa\x8a\x4d\x92\xc7\xe6\x8b\xc6\xfa\x4b\xb7\x01\x70\x03\xe6\x8f\x3d\xda\xf7\xd9\x7d\x8b\xec\x0b\xd6\x3c\x09\x57\xf0\x25\x8e\xa5\xad\x9a\xab\xd7\xac\x6e\x38\x38\x0f\x0b\x64\xdf\xbc\x8c\x81\x4e\xda\x47\xe5\x7b\x4f\xc2\x6e\xf6\x0f\xce\x22\xd3\xa8\xaa\xde\xd6\xe5\x1c\xb6\xac\x30\x3a\x33\x31\xff\x28\xd4\xd5\x12\xa6\x59\xe7\x36\xbb\x2e\x60\x3f\x8d\x5e\xf6\x3c\xdd\xcb\x64\x3d\xfb\xbd\x06\xc5\x3d\xcb\xce\x82\xd8\xce\xe2\x76\x62\xf8\x1b\x3c\x26\xcc\xea\x6c\x6e\x59\x85\x75\xd0\x54\x15\xc4\xb6\xf1\xbb\x32\x7a\x1c\xb2\x0c\xac\x73\x5d\x94\xb2\xdd\x42\x95\xff\x52\x9d\xd3\x59\x95\x59\xb2\xe7\x42\x19\x4f\xa3\xaa\x30\xfb\xb4\xac\x4f\x2c\x18\xd9\xa4\xe2\x8a\xa7\xd6\x51\x18\xfc\x7a\x9e\x43\x0c\x02\x1f\xed\xd9\x49\xec\x3d\x39\x96\x96\xea\xf8\xb0\xbe\xac\x2a\x3a\x8c\x1d\xdb\xc0\x8e\x6b\x75\x73\xc0\x60\xec\x89\x7b\x6c\x1d\x3f\xe2\x89\x65\x94\xea\xd0\x9b\x1f\x2d\x2e\x7f\x7c\x6c\xc3\x36\xec\xa6\xd2\x14\x0b\x7b\x08\xca\x6c\x0c\xf3\x2a\x65\x26\x9d\xaa\x4e\xa5\x63\xb5\x55\x55\xb7\xca\x4c\xe3\xba\x66\xbf\xd8\x1c\x7e\xc1\x9e\x58\x03\x18\x60\xf1\xbc\x51\xfc\x51\xd7\xc5\xaa\xed\x41\x53\x01\xfd\x75\x62\xa2\x51\xc5\x05\x6e\xb2\x4d\x69\xcc\xea\x5e\xb5\xc2\xf6\xa0\x18\x37\xa8\x33\x31\x88\xfd\x4f\xaa\x20\x6c\x8c\xb9\xd5\xd4\x42\xa3\x67\xe0\x07\x93\x3a\x45\xec\xb5\x92\x4d\x1a\xdf\xa9\xbd\xe2\x55\x4a\x76\x36\x2d\x94\x5c\xf6\xd8\x14\x7b\xd8\x3a\xd5\xc6\x89\x0a\xdf\xa7\xc5\x20\x61\x80\x4d\x4d\x54\xc2\xe8\xe2\x1a\xff\xe0\x0c\xac\xc3\x3e\x2b\x1e\xa3\x9b\x49\x1d\x54\x74\x63\x93\x26\xd9\x71\x7d\x5b\x03\xfb\xb7\x8e\x5d\x2f\x0e\xa1\xaa\xdc\xb3\xcc\x54\x91\x2d\x54\x05\xec\xd4\x39\x2c\x34\x95\x11\xc4\xe7\xb0\xe7\x46\x7c\xa1\x8e\x8a\xdd\x8b\x63\x01\x32\x03\xd7\x36\x1c\x06\xbf\x91\xaf\x65\x8b\xc1\xbf\x1f\xe4\x7b\xbc\x6a\x4d\x79\x58\xd6\xae\x78\x66\x95\x88\xec\x55\x2b\x32\x36\xf0\xa4\x93\x5f\x15\xea\x70\xb3\xb6\x3e\xf8\xfa\xac\x4a\xaf\x29\x85\x76\xab\xfe\xcd\xb2\x8f\xec\xfe\x14\x9a\x6b\x0c\x43\x56\xe8\xa1\x57\x75\x1e\xdb\x81\x4f\x05\xf9\x0c\xfa\xb5\xee\x77\xfd\x42\x97\xea\xe4\x5a\x4c\x57\xe5\xc3\xb2\x2b\x75\x17\x17\x55\xa9\x0b\x4d\xbc\xb4\xf3\x8b\x6a\x55\x76\x6c\xc5\x6f\xcb\xd2\xe5\x66\xeb\x2a\x65\xa7\x8d\xf8\x5c\xe9\x19\x59\xff\xc2\xdf\x26\xc5\x99\x46\xbc\x15\x3b\xb4\x4e\xa1\x26\xc8\xac\x72\xd0\x8a\xaf\x4c\x2e\xbb\x42\x71\x27\x6b\xda\x23\x0a\x23\x8c\x2b\x14\xea\x0a\x54\xaa\xe8\x77\xaa\x84\x54\x1e\x9f\xec\xf9\x85\xcb\x71\x10\x17\xb1\xa9\x9f\xa0\xea\x74\xe3\xb2\x1f\x84\x21\x95\x2a\x2d\xe0\x42\xab\xe9\x86\x41\x59\x36\xba\x9a\x35\x75\x51\x45\x71\xd4\xc9\xf5\x4c\xbc\xb7\xae\x48\x73\xed\x96\x06\xbd\x0a\xe1\x7d\xa3\x6a\x33\x6b\x1b\xd4\xc1\x8a\xaa\x8c\x37\x9a\xb4\xb2\xe9\x24\xf1\x8e\x20\xce\x50\x0c\xea\x36\x69\xba\x04\x1c\x9f\x35\x41\x30\xab\xea\x6c\xb9\x88\x3a\x4e\xc6\xd5\x7a\x75\x8a\xd5\x7d\xad\x84\x6d\x8d\xb0\x31\xab\xd3\x09\x2f\xc9\xaa\xe8\x58\x85\x38\x6b\x52\xa7\xd2\x9e\xb3\xaa\x48\xca\x2b\x4c\x2e\xed\x35\xce\x1a\xb6\x17\x2e\x1b\xec\xa4\x14\xc6\x36\x9a\xca\xe9\xe4\xa7\xd6\xb5\x4b\xea\xe2\x65\x4d\x5c\x2c\xaa\x34\xa9\x53\x8a\xbf\x5b\x3e\x52\x09\x77\x27\x4d\x79\x68\xfa\x04\x6c\xb4\x2a\x73\x16\x6f\x5e\x9c\xd3\x81\x53\x85\x72\x9b\xa5\xbf\xc6\x9b\xad\xfb\x6e\xdd\x0a\x4d\x7e\x34\x5a\x8f\xf9\x69\xeb\xb8\x55\xa9\x3b\x92\xd4\x91\xe6\xd5\xa9\xaa\x02\xde\x34\xb2\x77\xe2\x80\x9d\x13\xdc\x3e\x6b\x4d\x49\x99\xac\x54\x31\x6c\x84\x2d\xf8\x22\xe7\xa4\x17\x13\x0f\xc4\xb3\x42\x95\x5b\x64\x89\xfc\x2d\x1e\x37\xae\xd3\x46\x72\xb5\x6e\x5e\xe5\xcf\xb7\xae\xe3\xa4\xa9\xc9\xec\x3a\x32\x4c\x55\x2c\x00\xc3\x4d\x76\xaa\xda\x58\xec\x57\x37\x8a\xb5\x61\xd7\xd8\x88\xf1\x6b\x4d\xc2\x6c\x76\x00\xa6\xc5\xe8\x98\x54\x56\x2e\xcb\x5e\xd3\x0a\x8b\xa6\x15\xc1\x71\xab\xf6\xd6\xaa\x60\xaa\x6b\xbd\xe1\xd8\xa4\xae\xff\xd6\x75\x59\x34\xe9\x03\xf7\x00\xa3\x86\x4d\x86\xad\xdb\xf9\xa2\x09\xbe\x5a\x5d\x93\x52\x1d\xab\xcd\x67\x16\x55\x1c\x1b\xf1\x44\xab\x08\xc6\xeb\x14\xd9\x24\x3d\x59\x95\x71\x71\x59\x18\xc6\xd7\x8a\x17\x59\x1d\xba\xc2\x75\xcf\xfd\xb7\x9c\x9e\xb5\x5b\x75\x3a\xbb\xcc\xe1\x26\xe0\x02\xef\x67\x75\xa7\x6c\x6a\x65\xd1\x54\x9b\xb8\x86\x55\x7f\x93\x73\x8d\x8d\x8f\x22\x4b\xee\x9b\x35\x3d\x60\xba\x09\xea\x0e\x0f\x6e\x5f\x5c\x13\x95\xa3\x6e\x93\x95\xe0\xa3\x55\x09\x35\x59\xb0\x28\x3e\x77\xe9\xda\xe9\xb0\x98\xaa\x7b\x60\x4f\x9d\xe2\xa3\xc5\x27\x4d\x2c\x21\x13\x62\xc2\xa0\xae\x47\xaf\x09\x9d\x4a\x1d\x69\x6c\x0b\xbd\xf5\x5b\x2e\x3d\x3b\xdf\xb6\x67\xaa\x2b\x35\x68\x4a\x6a\xd2\x3a\xe2\x16\xa7\x7b\x4d\xb6\x45\xb7\xaf\x24\x3c\x2d\xc5\x11\x83\xaa\xbf\x49\x5c\xd5\xa6\x2e\xd5\x29\xb7\x8e\x69\xaf\xe9\xc7\x24\xbf\x0b\x8a\x31\xaa\xea\x17\xca\x39\x5a\xf9\xb7\xc5\x6d\xe5\x00\xd8\x32\xf9\x2f\xfb\x99\x84\x09\x49\x75\x10\xab\x28\x47\xf7\x09\xb3\x2f\x4d\x7e\xd5\xaa\xc4\x22\x1b\x9b\xaa\x50\x87\xd6\xba\x53\x49\x13\x24\x9a\x5a\x28\x14\xef\xad\xb3\xba\xb8\x0c\x3b\x75\x0d\xb3\xf2\x11\x72\x7b\x38\xd0\x20\x4e\x67\xd3\xa7\x9d\xf3\x10\xec\xaf\x54\x87\x3a\x88\x9f\xd5\xe2\xb9\xa5\x38\x0c\xfe\x33\x69\x32\x89\x6b\x4a\xd5\x4f\x58\x17\xf7\xcf\x9a\x30\x6b\xd4\x09\x8c\xc2\x7e\xeb\x08\x6b\x12\xb1\x52\x6d\x68\x16\x9f\xc4\x2e\xa6\xe6\x9a\xe3\x4c\xea\x4a\xda\xf4\xa2\x72\xc7\x24\xdb\xb4\xfa\x86\x3a\x50\x1b\x27\x58\x54\xb3\xe9\x14\xa3\xf8\x0c\x3f\x58\x34\xc1\x92\xb6\xbc\x47\x53\xbd\xa5\x70\x85\x7b\x2e\x9a\xce\xee\x14\xf3\x4a\x71\x69\xfc\x6b\x50\x8d\x20\x2a\x2e\x54\xea\xb4\x4d\xed\x75\x12\xd1\xb8\xbe\x6c\xb3\x15\x06\xdb\x54\x61\xd0\xf4\xcb\xac\x69\x25\x4d\xd5\x1a\xcf\x7c\x31\x29\x64\x1d\xd7\xd6\xed\xdf\xe2\xdc\xe2\xbe\x37\xc8\x9e\xc0\xa6\xac\xc9\xdb\x45\xb9\x09\x36\x39\x25\x75\x9b\xc4\xa9\xf0\xaf\x56\x9d\x75\xd3\xc3\xe0\x7e\x66\xf9\xaf\xb0\x30\x2a\x56\xd9\x04\xac\xf2\x1d\xcb\x01\x2b\x55\xfa\x07\x4d\xe6\x8a\xa3\xd9\x31\x4d\x61\x5a\xe5\x3a\xba\x6f\x55\x92\x8d\xf1\x6d\x4d\x5c\x59\xde\x5e\xfb\xfb\x59\x7c\xc0\x72\x8b\x6d\xa2\x65\x51\x37\x57\xb8\x9b\x14\x43\x2c\x2e\x68\xf2\xc0\x30\x59\xbc\x0c\xde\x54\x68\x52\xdd\x3a\xb0\x49\x1d\x99\xe8\x76\x6b\x79\x6a\x70\x3e\xb7\x4d\xf0\xc6\xe6\x5a\xaf\x6a\x36\x4e\x17\xdc\x57\xcd\x07\x67\x97\xa5\x61\x90\x2a\xf1\x56\xeb\x1c\x9c\x0b\xb4\xb2\x89\xb4\x75\x72\xa2\xa6\x1b\xe4\x97\xfd\x16\x97\xc4\x75\x6d\xd2\xfc\x85\x7f\x20\x47\xeb\x0c\x4f\x2e\xa7\xa0\x69\x63\xe2\x55\xd6\x44\x31\x31\x08\x5c\x6b\x35\xd9\x1a\x55\x63\x35\x8c\x8f\x8a\x47\xea\x0e\xb5\xca\x89\x7b\x75\xea\x79\x46\xab\xa9\xf8\x6d\x6a\xc8\xba\xdf\xea\xce\xf4\x9a\x52\x6d\x14\xb7\xe0\x04\x49\x9c\xbf\xd7\x54\xeb\x36\x8d\x16\x35\x2d\x84\xbd\x0e\x9a\xb4\x43\xd6\xf8\x98\xf1\x31\x4d\x14\x5b\xde\x59\x3b\x4e\x04\xd5\x47\x89\x0b\xe0\x6a\xd0\xb4\x73\x12\xce\x21\xc3\x46\x13\x0d\x3c\xb7\xd3\x84\x9a\xd9\x8f\x7e\x3d\x11\xc4\xd7\xd1\xbb\xf1\x06\xfd\x9a\x61\xeb\xf6\x61\x03\x36\x31\x52\x08\xf3\x93\xcb\xda\xe4\x3c\xab\xde\xa2\xe9\xc0\x41\xf9\xd3\xa2\xae\x0b\x58\x19\x55\xbb\xa9\xb6\x63\xf5\x95\x0b\x96\xaa\x4b\x75\xaa\x01\xd7\x9a\x58\x35\x6c\x1d\xf4\x2b\x8e\x46\x13\x1e\x9a\x46\x8d\xca\xb5\xd9\x4f\xa9\x7c\x64\x16\x8f\xcb\xc2\x04\xe3\x43\xe2\x95\x51\xd3\x41\x5b\x2d\xa1\xd1\x94\x3f\x36\x82\xed\x15\xe2\x90\x60\x5c\x23\xae\x6f\x39\xb9\xe2\x81\xd5\xb1\x5a\x4d\xc7\xa9\xae\x30\x6f\xbf\x54\x49\x6e\x4b\xd8\xdd\xb0\xfd\x32\x42\xd3\xfb\xad\x6a\x8c\x1b\x16\x13\xe7\x6c\xc2\x49\x93\xf0\xd6\x8d\xd3\xaf\x14\x78\x9f\x64\x4f\xc4\xbe\xac\x09\xaf\x4e\x79\x64\xd0\xaf\x00\xda\xf9\xda\xe5\xea\xd4\x11\xdf\xb8\xa9\x4d\x41\x0d\xbe\x87\xa0\x73\xe1\x0f\x83\xea\xab\xcf\x35\x87\x42\x3c\x5d\xbf\x4e\x31\x9b\x6c\x7d\x4d\x60\x61\xa7\x1a\xe5\xa4\xba\x66\x56\xdc\x40\x07\xd8\x76\x23\xde\x5e\xa9\x2f\x91\x35\x59\xbf\xd5\x4c\x91\xf9\xb4\xed\x47\x93\x2e\xa5\xba\xf9\x8b\x7e\xad\x32\xeb\x57\x3e\xf0\xc5\xa0\xba\x88\x4d\x31\x88\x0b\xe1\x1b\x56\xaf\x10\xa7\x2e\x65\x17\x60\x7b\xab\xc9\x14\x9b\xce\x51\xbf\xc1\x7e\x6d\x20\xff\x28\xb6\x49\x07\x61\x66\x16\x6e\xd8\xd4\xf6\xe2\x76\x3f\xab\xde\x57\x6b\xc2\x2b\x6a\x7a\x69\x51\x5d\x6f\x50\x37\xbc\x13\x67\xec\x85\xa5\x41\x3d\x8e\x52\xf5\xb0\xa4\xee\x7d\x25\x19\xcc\x1b\xce\x94\x57\x6c\x68\xb7\xa9\x31\x71\xc5\x49\x13\xfc\xd8\x05\xb2\x41\x3f\xa5\x7e\x71\x52\x68\x1a\xa4\xd9\x6a\x90\x9a\x58\x9d\x64\x3f\x59\xb9\xf7\xbc\xc5\x64\xc5\x82\x56\xf5\x08\xab\xfd\xcf\xca\xa5\xfb\x6b\x0c\xb7\xbc\x26\xab\xa3\x2a\x8e\x31\x69\xaa\xa2\xcb\x57\x4e\x31\x6d\xd3\x8d\x85\x3f\xb7\x11\x46\x07\xf5\x18\x0c\x67\x94\x97\xdb\x84\x80\x6a\x27\x8d\x62\xc7\xa2\x6e\x72\xa3\xc9\x4a\xc3\x14\xe9\xa9\x51\xbd\xa9\x54\x7c\xc6\xa6\x66\x71\xdc\xa0\xc9\xec\x72\xbe\x72\xc9\x52\x79\x5e\xa3\x5e\x51\xa1\x7a\x74\x27\x3f\xb6\xbc\x6c\x71\x3c\xb0\x49\xf2\x7c\x95\x33\xb6\xdb\x69\x7a\x74\x9b\x14\x1a\x34\x5d\x62\x35\x3c\x4d\x42\x56\x9a\x44\x40\x56\xb5\xea\x90\xa5\xea\x77\xd8\xe0\xb2\xf5\x00\x54\xab\x98\xf5\xab\xa3\x5e\x1c\x67\x12\x17\xad\x2a\xf7\xfb\x4a\x7c\xb0\xd3\xc4\x18\xb2\xee\xfa\x6b\xb7\xdd\x62\xbe\x6a\xf9\x41\xf5\xe2\x26\x5f\xa7\xee\x2d\x5e\xc9\xd6\x36\xfe\x3c\xcc\xd7\xf8\x52\xab\xc6\x9d\xc3\xb5\xd7\x64\xf9\x82\x72\x22\x64\x5e\xaa\x16\xde\x6a\xaf\x56\x47\x57\xbd\xc0\x26\x14\x94\xdb\x6d\x3d\x8d\xa0\xce\x75\x50\x5f\x21\x2d\xd7\xd8\x34\x0d\x2f\xea\x57\xc1\xf1\xbc\x53\x4f\x65\xd1\xb4\xdf\xa2\x09\x41\xcb\x29\xf4\xab\x3f\xab\xb1\x6b\xda\x98\xe3\x86\xcd\x9d\xf8\xb6\x6a\xe4\x66\x53\x9a\x52\x9b\x5f\xc4\x8a\x6d\x9a\x71\xd2\x54\x3a\xb6\x56\x6a\xaa\xce\x7a\x14\x8b\xea\x0e\xaa\xa9\x74\xb2\x9b\x56\xfa\x6a\x55\x63\x88\xf2\x99\x6a\xe3\x5f\x8d\x63\xb6\xad\x7d\x52\x2f\x41\xfb\xc7\xaf\x92\xa6\xe9\xd1\x89\xe5\x31\xb5\xb8\x79\xd2\xaf\x4c\x92\xea\x35\xb5\x7e\xfd\x20\xce\x84\xed\x5a\x1d\x77\xf2\xfa\xce\xa2\xbe\xae\xf5\xc2\xd4\xcf\x88\xe9\x5a\x5f\xb5\xa9\x36\x4d\x18\x59\x2e\x14\x95\x33\x2e\xee\x6b\x85\x26\xfe\x16\x61\x73\x59\x5c\x6b\xf8\x75\x79\xf5\xd5\x4a\xbf\xca\xb1\x3e\x5e\x70\xcc\xc0\x9e\x37\x5f\xc3\x87\x8a\xff\x09\x00\x00\xff\xff\x24\xd7\xc0\xff\x00\x40\x00\x00")

func resResGoBytes() ([]byte, error) {
	return bindataRead(
		_resResGo,
		"res/res.go",
	)
}

func resResGo() (*asset, error) {
	bytes, err := resResGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/res.go", size: 40960, mode: os.FileMode(420), modTime: time.Unix(1566532345, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonCaseFromProdoctJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x94\x4d\x8f\xd2\x40\x18\xc7\xef\x7c\x8a\xc9\x9c\x7b\x68\xbb\x7b\xda\xab\x07\xaf\xde\x8d\x07\xd2\x1d\x63\xe3\xba\x90\x6d\x37\x31\xd9\xf4\xd0\xc4\x45\xb3\xbb\x04\x12\x5e\x12\x88\x82\x55\x8a\x04\x5b\xaa\x11\x5f\x42\x15\xbf\x0c\xf3\xd2\x93\x5f\xc1\x74\x8a\xa5\x2d\xd4\xe2\xc1\xbd\xc0\x4c\x9f\x67\xfe\xfd\x3d\xff\x79\xfa\x5c\x94\x00\x80\x4a\xe5\x18\xc1\x23\x20\x09\xe1\xe6\xb4\xfc\x24\xdc\x40\x3a\xbe\x0c\xcc\x16\x7b\x3e\xc5\x57\x13\x7c\xd3\x25\x9f\xaf\x99\xd7\x21\x56\x8d\x0c\xbe\xac\x16\xef\x70\xcb\x84\x3c\x5d\x29\x6b\x48\x83\x47\xe0\x7e\x09\x00\x00\x2e\xf8\x2f\x00\x50\x3d\x0e\x05\x45\x51\xf8\xf3\x40\x57\xf5\x13\xae\x1b\x09\xd1\xf6\x64\xb5\xbc\x16\x25\x18\x27\x68\x3a\xaa\x6e\x84\x92\x62\x29\xc1\x58\x31\xa3\xea\xda\xc1\x74\x24\x4a\x30\x8e\x1a\xeb\xd5\x03\xfe\x6f\x08\x3b\xf8\xe4\x5d\x7c\xb4\xe7\xe3\x1f\x1d\x3c\xfa\xc8\xe6\x36\x9b\x8f\x71\xe3\x6b\xd0\x36\xf1\xac\x4f\xdd\x2e\xed\xd8\xff\xc6\x2b\xe7\xf2\xb2\x9f\x03\xea\xbb\x6c\xd9\xc2\x97\xf6\x01\x71\xac\xa0\xdd\x63\x9e\x47\xfb\xcf\xb0\x57\xa3\xaf\xcd\x44\x19\xc2\x5f\xf5\xa5\x1c\x7d\xea\x38\x87\xc4\xb1\xf0\x87\x57\xa1\xd9\xbc\x24\x98\xca\x44\x4f\xab\x48\xd1\x79\xea\x27\x9f\xfa\x43\xd2\x68\xd2\xd1\x22\x2a\x98\xbd\x79\x1f\xd5\x9c\x3e\xa2\x6a\x77\x1e\x21\xe5\xf1\xbd\x8a\x7a\x1a\x1e\xd4\xcf\xce\xd1\x9e\x98\x52\x9e\x0d\xab\x6f\xf5\x22\x27\x32\x08\x77\xcf\x2a\xe7\xd5\xf5\xdb\x53\xa1\xed\xfb\xc8\xc2\xa4\x80\x24\x21\x1b\xd9\xdc\x0d\x67\x91\x0b\x58\x32\x3c\x0f\xcb\x27\x1a\x4a\x85\x0d\x61\x3f\x12\xb9\x88\x44\x22\x8e\x45\xdc\xb7\xd4\x9a\xfd\x67\x92\x83\x7c\x12\x5c\xab\x6f\x60\x6e\xc5\x96\xc3\x3d\x61\x0a\x9d\x49\x74\x3a\xff\x0e\xc8\x8b\x26\xbe\x1a\xfe\xfa\x7e\x13\x35\x3b\x79\x39\xdd\xdd\xef\xa0\xa8\xe7\x41\x62\xca\x80\x78\xd2\x80\xed\xd9\x53\x0a\x57\xc6\xef\x00\x00\x00\xff\xff\xac\x35\x04\x4d\x6b\x05\x00\x00")

func resJsonCaseFromProdoctJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonCaseFromProdoctJson,
		"res/json/case-from-prodoct.json",
	)
}

func resJsonCaseFromProdoctJson() (*asset, error) {
	bytes, err := resJsonCaseFromProdoctJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/case-from-prodoct.json", size: 1387, mode: os.FileMode(420), modTime: time.Unix(1564469536, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonSuccessJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x4a\xce\x4f\x49\x55\xb2\x52\x30\xe4\xaa\x05\x04\x00\x00\xff\xff\xb8\xfe\xe3\x6c\x0f\x00\x00\x00")

func resJsonSuccessJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonSuccessJson,
		"res/json/success.json",
	)
}

func resJsonSuccessJson() (*asset, error) {
	bytes, err := resJsonSuccessJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/success.json", size: 15, mode: os.FileMode(420), modTime: time.Unix(1564618548, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resJsonZentaoSettingsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x3d\x6b\xc3\x30\x10\x40\xf7\xfc\x8a\xe3\x66\x0f\xe9\xe7\xe0\xad\xa4\x8b\x97\x52\x48\xb7\xd2\x41\xd8\xe7\x70\x60\x4b\x41\x3a\x77\x68\xc9\x7f\x2f\x52\x02\x2d\xf1\x99\x56\x4b\x21\xa0\x29\xf1\x3d\xd9\x0f\x73\x0f\x7f\xae\x00\xb0\x75\x1d\x61\x0d\x57\x55\xbc\xf8\x20\x2b\xc6\x6d\x49\x84\xed\x2e\x60\x0d\xf1\x08\x00\x8e\xae\x9b\x06\x8a\x83\xd7\x34\x80\x13\x48\xb0\xe9\xe2\xfd\xeb\x75\xf5\x3d\xda\x1c\x1f\x8a\xa6\x1b\xd9\xe2\x0f\xf0\x64\xc6\x04\x1e\xce\x41\x13\x1e\xa9\x37\xd3\x20\x58\x43\x6f\x86\x40\x27\x74\xa8\x16\x84\xd7\xaa\xb0\x1d\x98\xac\x68\xc6\xcd\x8c\x64\x2b\x6f\x54\x25\x5b\x21\xdf\x9b\x96\x34\x6b\xa3\xc1\x6c\xf1\xad\x2a\x0e\x2c\xaa\x73\x7b\x36\xcf\xd6\xdd\xe9\xbb\xdc\xb3\xba\xc9\xe7\x66\x49\x26\x7e\xfa\xd5\x75\xaf\xba\x84\x42\x2c\x50\xf3\xbd\xcc\xd1\xe2\x0b\xa6\xdf\xb7\xe3\x49\x6c\x8d\xd0\xce\x79\x2e\x19\x97\x8c\xb3\x32\xfe\x93\xec\xff\x3a\x7e\x27\x1f\xd8\xd9\x52\x71\xa9\x78\xbe\xc9\x8b\xa9\x78\xef\xd9\x79\x96\xf2\x35\x2e\x1d\x5f\x66\xc7\xab\xf8\xef\xf0\x15\x00\x00\xff\xff\x54\x3e\xa5\x1c\x43\x0b\x00\x00")

func resJsonZentaoSettingsJsonBytes() ([]byte, error) {
	return bindataRead(
		_resJsonZentaoSettingsJson,
		"res/json/zentao-settings.json",
	)
}

func resJsonZentaoSettingsJson() (*asset, error) {
	bytes, err := resJsonZentaoSettingsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/json/zentao-settings.json", size: 2883, mode: os.FileMode(420), modTime: time.Unix(1565055118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateBatTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x2f\xc9\x57\x28\x2e\x49\x2c\x2a\xe1\xe2\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x59\x41\xed\x57\x2d\xe6\x02\x04\x00\x00\xff\xff\xca\x22\x68\x86\x8f\x00\x00\x00")

func resTemplateBatTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateBatTpl,
		"res/template/bat.tpl",
	)
}

func resTemplateBatTpl() (*asset, error) {
	bytes, err := resTemplateBatTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/bat.tpl", size: 143, mode: os.FileMode(420), modTime: time.Unix(1566467484, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xce\xb1\x0a\xc2\x30\x18\x04\xe0\xd9\x7b\x8a\x2c\x01\xed\xd2\x3d\x66\xeb\xd4\x3d\x2f\xf0\x93\xfe\x4a\x89\x0d\xc1\xfb\x05\x41\x7c\x77\xb1\x2a\xa2\x37\x1d\x1f\x37\x5c\x93\x5c\xe4\xa8\x6e\x91\xb9\x02\x7d\x87\x18\x63\x1a\x90\x85\x3a\x4e\xc1\x7d\xe2\xf9\xa6\xb1\x26\x61\x09\x2f\x32\x61\xf9\x5b\xd9\x6c\x27\xfd\xca\x93\x68\xda\xf8\x4b\xd0\x6b\xd3\x6c\x0c\xf0\xc4\x59\x65\x5a\x74\xad\x48\xc3\x1e\x5d\x0f\x1c\x2e\x35\xaf\x9f\xb6\x3b\x77\xc3\xc6\x13\xf7\x47\x00\x00\x00\xff\xff\xd6\x4d\x02\xef\xaa\x00\x00\x00")

func resTemplateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateGoTpl,
		"res/template/go.tpl",
	)
}

func resTemplateGoTpl() (*asset, error) {
	bytes, err := resTemplateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/go.tpl", size: 170, mode: os.FileMode(420), modTime: time.Unix(1565835275, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateLuaTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\xc8\x29\x4d\xe4\xd2\xd5\x8d\x8e\xe6\xb2\xb1\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x5b\x73\xc5\xc6\x72\x81\xd8\x80\x00\x00\x00\xff\xff\x1a\x87\xb6\xf8\xa1\x00\x00\x00")

func resTemplateLuaTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateLuaTpl,
		"res/template/lua.tpl",
	)
}

func resTemplateLuaTpl() (*asset, error) {
	bytes, err := resTemplateLuaTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/lua.tpl", size: 161, mode: os.FileMode(420), modTime: time.Unix(1565835298, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePerlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\x48\x2d\xca\xe1\xb2\xb1\x09\x71\xb6\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x73\x81\x68\x40\x00\x00\x00\xff\xff\x27\xda\x84\x81\x99\x00\x00\x00")

func resTemplatePerlTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePerlTpl,
		"res/template/perl.tpl",
	)
}

func resTemplatePerlTpl() (*asset, error) {
	bytes, err := resTemplatePerlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/perl.tpl", size: 153, mode: os.FileMode(420), modTime: time.Unix(1565835307, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePhpTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xb1\x2f\xc8\x28\xe0\xb2\xb1\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x5b\x73\x81\x19\xf6\x76\x5c\x80\x00\x00\x00\xff\xff\x40\x4f\x99\x87\x90\x00\x00\x00")

func resTemplatePhpTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePhpTpl,
		"res/template/php.tpl",
	)
}

func resTemplatePhpTpl() (*asset, error) {
	bytes, err := resTemplatePhpTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/php.tpl", size: 144, mode: os.FileMode(420), modTime: time.Unix(1565835313, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePhpYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcf\x6e\xd3\x4c\x14\xc5\xd7\xdf\x3c\xc5\x48\xd1\xa7\x40\x05\x8c\x53\x76\x6e\x44\x91\x2a\x21\x75\xc7\xa2\x2f\x60\x9c\x29\x89\xda\xc4\x96\x67\x2a\x15\x56\x49\x08\x98\x16\x97\xa0\xb4\x21\x90\xba\x90\x34\x44\x44\x40\x6a\xa4\x14\xc5\xf9\x43\xf3\x32\x9e\x19\x7b\x95\x57\x40\x8e\x5b\xd5\x8b\xc2\x2c\x66\x71\xcf\x9c\xdf\x9c\x7b\x6f\x7a\xf5\x7f\x02\xd2\xe9\xf4\xc6\x1a\x50\x15\x82\xd7\x33\x32\xbc\x3a\x29\x49\xba\xac\xad\x17\x36\x14\xb2\x15\x2a\xcb\x92\x04\x68\x8e\x6e\xe3\xeb\x67\x50\x1c\xf5\xf8\xeb\xa1\xf8\x38\x61\xbf\xeb\x80\x50\xac\x13\x19\x40\x08\xef\x86\xd7\x7f\xb9\x8c\x0c\xc3\x5a\x4a\x92\x24\x98\x80\xac\xea\x08\xbb\x24\xea\xdd\x85\x58\x50\xf2\x58\x86\x7c\xef\x90\x4d\x8b\x91\x3f\x68\xff\x0a\x4e\x4e\x6f\xb2\xa7\xa4\x98\xc5\xbf\x38\x64\x2f\xbb\xbc\xdf\x11\xed\x33\xd1\xac\x44\x09\xd8\xbb\x03\x56\xb3\x98\xf3\x4a\xb4\x4a\x37\x11\x96\xe3\x04\x51\x1e\x31\x73\x92\x8c\x7e\x4d\x72\x6b\x2f\xa8\x9d\x2d\x64\x35\x8b\xd5\x2d\x5d\xcb\x15\xa8\x0c\xa9\xb1\x83\x01\xc0\xbb\x3a\x56\x69\xac\xa9\x05\x6f\x3d\xc6\x8d\x37\x36\x9f\x5a\xbc\xfe\x33\x30\xab\xac\x66\x2d\x86\xe1\xb9\x7d\xe6\x8c\xd8\xf8\xc8\x73\xf7\xd9\xc1\x80\x55\x9d\x05\x23\xa2\xca\x30\x01\x1f\x5e\x61\xb8\xfd\x99\xdb\xc7\x62\x72\xc8\x3f\xd9\x77\x42\xa2\x37\xe9\x72\x7b\x8f\x7d\x69\xfa\x6d\x0b\x00\x03\x2b\x99\x3c\x8e\x62\x40\xbf\xd2\xe4\xf6\x8f\x70\x0e\xe6\x98\x37\xba\x6c\xd6\x60\x35\xeb\x32\xa9\xf8\xde\xf2\xf7\xcb\x9e\xdb\x9f\x4f\xad\x04\xab\x0e\x79\xcb\xe4\x83\x9e\x68\x56\x82\x6f\x96\xef\x94\x44\x79\x14\xd8\x45\x6f\x76\xc2\xad\x92\xe7\x16\x7d\xf3\x3c\xca\x17\x07\x7b\x6e\x1f\x2d\xc1\x25\x74\x6d\xb5\x8b\xe2\xa8\xe7\x4d\x3a\xa2\x55\xe2\xc7\x33\x7e\x70\x3a\x9f\x5a\x08\xf1\x41\xcf\xff\xda\x11\xcd\x8a\xe7\x8e\x7d\xe7\x9c\x7f\x78\xcb\xdf\x9b\xac\xdf\x88\x58\xac\x5a\xf6\x8b\x2f\x78\x6b\xe8\x5d\xbc\xc9\x52\xaa\x13\x19\xa1\xa7\x39\x9a\xdd\x79\x72\x4f\xd5\xf2\x08\x2b\xe4\x19\xd1\x36\x29\x7a\x8e\x0b\x54\xd1\x14\xba\x89\xa8\x81\x31\xca\x2b\x84\x62\x03\xed\x66\x34\x15\x11\x25\xaf\x6f\x63\xb0\xb1\xb6\x02\x00\x56\xb3\x1a\x4c\x26\x92\x2b\x80\xa8\x46\x4e\xa7\xe4\x91\x66\x3c\x0e\x37\x95\xba\x75\x7b\xe5\xef\xea\xf2\x3f\xd5\xfb\xa1\x0a\x56\x1f\x80\x3f\x01\x00\x00\xff\xff\x58\xea\xdb\xaf\x0a\x03\x00\x00")

func resTemplatePhpYamlBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePhpYaml,
		"res/template/php.yaml",
	)
}

func resTemplatePhpYaml() (*asset, error) {
	bytes, err := resTemplatePhpYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/php.yaml", size: 778, mode: os.FileMode(420), modTime: time.Unix(1565687379, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplatePythonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\xa8\x2c\xc9\xc8\xcf\x33\xe6\x52\x57\x57\xe7\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x83\xdd\x00\x62\x03\x02\x00\x00\xff\xff\xe4\x3f\xb0\x2e\xa3\x00\x00\x00")

func resTemplatePythonTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplatePythonTpl,
		"res/template/python.tpl",
	)
}

func resTemplatePythonTpl() (*asset, error) {
	bytes, err := resTemplatePythonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/python.tpl", size: 163, mode: os.FileMode(420), modTime: time.Unix(1565835318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateReadmeEnTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcc\xb1\x4e\xc4\x30\x10\x45\xd1\x7e\xbf\x62\x24\x8a\x34\x04\xf7\xb4\x40\x89\xa0\xa3\xf6\x9a\x97\x78\x24\xc7\x63\xcd\xbc\x15\x81\xaf\x47\xd9\xf4\xf7\x9e\x59\x3e\x5d\x3b\x65\x7a\x98\x44\xbb\x10\x41\x69\xb6\x0a\x4d\xb6\xcc\x52\xe5\x36\xe4\x47\x59\x85\x15\x62\x1d\x71\x54\xd8\x07\x0a\x43\x02\x85\x6a\xfd\x32\xcb\x97\x2b\x71\xde\x51\x5c\x07\xe3\x10\x1c\xa3\xe5\x82\xfb\xdb\xf4\x98\xaf\x58\xb5\x9f\xe0\xf4\xf2\xf1\xfa\x36\x5d\x66\x79\x37\x87\x60\xcf\xdb\x68\x88\x47\x19\x2d\xc4\xb1\xc0\x0f\xa1\x92\x23\x9e\x53\x5a\x95\xf5\x76\x7d\x2a\xb6\x25\xe4\xf8\x0d\x5b\x98\xfe\xd0\x99\x2d\x73\x49\x74\x20\x6d\x39\x08\x4f\xfb\xb7\x95\x14\x77\xec\x3f\x00\x00\xff\xff\x3d\x13\x39\x40\xdc\x00\x00\x00")

func resTemplateReadmeEnTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateReadmeEnTpl,
		"res/template/readme-en.tpl",
	)
}

func resTemplateReadmeEnTpl() (*asset, error) {
	bytes, err := resTemplateReadmeEnTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/readme-en.tpl", size: 220, mode: os.FileMode(420), modTime: time.Unix(1566369782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateReadmeZhTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x4a\xfb\x40\x18\x00\xf0\xbd\x4f\x71\xf0\x9f\xf3\xbf\xdd\x55\xdd\x04\x9f\xe1\x8c\x97\xb6\x60\xbc\x90\xef\x2b\x54\xa7\x24\x06\x82\x35\xd2\xc1\x4e\x31\x42\x50\x87\xa0\x96\x0e\x2d\x34\x55\xb1\x2f\x73\xf7\xdd\x65\xf2\x15\xfc\x79\xec\x44\x0d\x81\xa9\x80\xa1\x04\x64\xe0\xc7\xe3\x08\xe1\xf7\xbb\x0c\x27\x80\x4c\x4e\x23\xe9\x23\xd8\xf7\xc6\xcd\x32\xdd\x2d\xff\x99\xf9\x96\x9a\x82\xd6\xad\xad\xf2\xfe\xad\x74\xab\xd4\x66\xbb\xbe\x4e\xf4\xfe\x89\xca\x54\x77\x89\x2b\x36\x66\xb5\x33\x9f\x8b\x81\xc7\x5c\x5e\x51\xfd\xa1\xbb\xe5\xe1\xe9\xd1\x31\xdd\x3e\x98\xd7\x8d\xad\x72\x5a\xb7\x7d\x31\xeb\xeb\xc4\x2e\x5a\xfd\xf5\x62\x9b\x94\x1e\xf7\x74\xff\x3c\xf0\x98\x99\x67\x2e\xb9\xa1\x66\xab\x7f\xee\x46\x88\x11\x1c\x70\x3e\x1c\xe3\x68\x72\xf6\xdf\x57\x21\x97\x02\xae\x40\x05\xc8\xaf\xe5\x25\x0a\x25\x30\xe0\x18\x4b\xc9\x43\x01\x28\x63\x3e\x3d\x57\x3e\x07\x11\x46\x17\xf2\x2f\x00\x00\xff\xff\x02\xed\x4f\x1b\xd6\x00\x00\x00")

func resTemplateReadmeZhTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateReadmeZhTpl,
		"res/template/readme-zh.tpl",
	)
}

func resTemplateReadmeZhTpl() (*asset, error) {
	bytes, err := resTemplateReadmeZhTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/readme-zh.tpl", size: 214, mode: os.FileMode(420), modTime: time.Unix(1566369503, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateRubyTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x28\x2a\x4d\xaa\xe4\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x73\x81\x68\x40\x00\x00\x00\xff\xff\xfb\x08\xee\xe4\x98\x00\x00\x00")

func resTemplateRubyTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateRubyTpl,
		"res/template/ruby.tpl",
	)
}

func resTemplateRubyTpl() (*asset, error) {
	bytes, err := resTemplateRubyTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/ruby.tpl", size: 152, mode: os.FileMode(420), modTime: time.Unix(1565835324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateShellTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x48\x4a\x2c\xce\xe0\xb2\xb1\x09\x71\xe6\x4a\x4e\x2c\x4e\xf5\x4c\xb1\x52\x80\x01\xd5\x62\xa8\x90\x67\x5e\x48\x62\x71\xb6\x15\x44\xa8\x24\xb1\x38\x1b\x4d\x55\x49\x66\x49\x4e\x2a\x42\x04\x24\x54\x5c\x92\x5a\x50\x8c\x2a\xc4\x95\x5a\x51\x90\x9a\x5c\x52\x6c\xc5\xa5\x5a\xcc\x55\x94\x9a\x98\x92\x9b\x0a\x66\x72\x85\x38\x73\x81\x68\x40\x00\x00\x00\xff\xff\xee\xc8\xc1\x63\x98\x00\x00\x00")

func resTemplateShellTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateShellTpl,
		"res/template/shell.tpl",
	)
}

func resTemplateShellTpl() (*asset, error) {
	bytes, err := resTemplateShellTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/shell.tpl", size: 152, mode: os.FileMode(420), modTime: time.Unix(1565835331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resTemplateTclTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\xbf\x0a\xc2\x30\x1c\xc4\xf1\xfd\x9e\x22\x22\x9d\xb3\x87\x6e\x9d\xba\xe7\x05\x62\x7a\x60\x69\x0d\x25\xf7\x53\x04\xf1\xdd\x25\xfe\x41\xf4\xa6\x2f\x1f\x6e\xbf\xf3\x67\x55\x7f\x98\x8b\x67\xb9\x38\xcb\xab\x8e\x10\xcd\xe5\x24\xba\x1b\xfa\x3e\x0e\x68\x3d\x4e\xc1\x7d\xd6\xe9\x4d\x63\x89\x49\x4b\x78\x91\x25\x2d\x7f\x2f\x9b\x6d\xe5\x57\x1a\xc9\xb8\xe9\x97\xc0\xeb\xc6\x6c\x0a\xe8\x84\xca\x34\x9d\xf8\x4c\xc4\x01\x77\xb4\x7a\x04\x00\x00\xff\xff\x0b\x79\xd7\x3d\xa6\x00\x00\x00")

func resTemplateTclTplBytes() ([]byte, error) {
	return bindataRead(
		_resTemplateTclTpl,
		"res/template/tcl.tpl",
	)
}

func resTemplateTclTpl() (*asset, error) {
	bytes, err := resTemplateTclTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/template/tcl.tpl", size: 166, mode: os.FileMode(420), modTime: time.Unix(1565835337, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/messages_en.json":            resMessages_enJson,
	"res/messages_zh.json":            resMessages_zhJson,
	"res/res.go":                      resResGo,
	"res/json/case-from-prodoct.json": resJsonCaseFromProdoctJson,
	"res/json/success.json":           resJsonSuccessJson,
	"res/json/zentao-settings.json":   resJsonZentaoSettingsJson,
	"res/template/bat.tpl":            resTemplateBatTpl,
	"res/template/go.tpl":             resTemplateGoTpl,
	"res/template/lua.tpl":            resTemplateLuaTpl,
	"res/template/perl.tpl":           resTemplatePerlTpl,
	"res/template/php.tpl":            resTemplatePhpTpl,
	"res/template/php.yaml":           resTemplatePhpYaml,
	"res/template/python.tpl":         resTemplatePythonTpl,
	"res/template/readme-en.tpl":      resTemplateReadmeEnTpl,
	"res/template/readme-zh.tpl":      resTemplateReadmeZhTpl,
	"res/template/ruby.tpl":           resTemplateRubyTpl,
	"res/template/shell.tpl":          resTemplateShellTpl,
	"res/template/tcl.tpl":            resTemplateTclTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		"json": &bintree{nil, map[string]*bintree{
			"case-from-prodoct.json": &bintree{resJsonCaseFromProdoctJson, map[string]*bintree{}},
			"success.json":           &bintree{resJsonSuccessJson, map[string]*bintree{}},
			"zentao-settings.json":   &bintree{resJsonZentaoSettingsJson, map[string]*bintree{}},
		}},
		"messages_en.json": &bintree{resMessages_enJson, map[string]*bintree{}},
		"messages_zh.json": &bintree{resMessages_zhJson, map[string]*bintree{}},
		"res.go":           &bintree{resResGo, map[string]*bintree{}},
		"template": &bintree{nil, map[string]*bintree{
			"bat.tpl":       &bintree{resTemplateBatTpl, map[string]*bintree{}},
			"go.tpl":        &bintree{resTemplateGoTpl, map[string]*bintree{}},
			"lua.tpl":       &bintree{resTemplateLuaTpl, map[string]*bintree{}},
			"perl.tpl":      &bintree{resTemplatePerlTpl, map[string]*bintree{}},
			"php.tpl":       &bintree{resTemplatePhpTpl, map[string]*bintree{}},
			"php.yaml":      &bintree{resTemplatePhpYaml, map[string]*bintree{}},
			"python.tpl":    &bintree{resTemplatePythonTpl, map[string]*bintree{}},
			"readme-en.tpl": &bintree{resTemplateReadmeEnTpl, map[string]*bintree{}},
			"readme-zh.tpl": &bintree{resTemplateReadmeZhTpl, map[string]*bintree{}},
			"ruby.tpl":      &bintree{resTemplateRubyTpl, map[string]*bintree{}},
			"shell.tpl":     &bintree{resTemplateShellTpl, map[string]*bintree{}},
			"tcl.tpl":       &bintree{resTemplateTclTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
